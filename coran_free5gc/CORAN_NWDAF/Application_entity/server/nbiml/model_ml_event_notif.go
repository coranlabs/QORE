/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.0.0-alpha.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nbiml

// MlEventNotif - Represents a notification related to a single event that occurred.
type MlEventNotif struct {
	Event NwdafEvent `json:"event"`

	NotifCorreId string `json:"notifCorreId,omitempty"`

	// Indicates the address (e.g. a URL or an FQDN) of the ML model file.
	MLFileAddr string `json:"mLFileAddr,omitempty"`

	// Identifies the ADRF where the ML model is stored.
	AdrfId string `json:"adrfId,omitempty"`

	ValidityPeriod TimeWindow `json:"validityPeriod,omitempty"`

	SpatialValidity NetworkAreaInfo `json:"spatialValidity,omitempty"`
}

// AssertMlEventNotifRequired checks if the required fields are not zero-ed
func AssertMlEventNotifRequired(obj MlEventNotif) error {
	elements := map[string]interface{}{
		"event": obj.Event,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNwdafEventRequired(obj.Event); err != nil {
		return err
	}
	if err := AssertTimeWindowRequired(obj.ValidityPeriod); err != nil {
		return err
	}
	if err := AssertNetworkAreaInfoRequired(obj.SpatialValidity); err != nil {
		return err
	}
	return nil
}

// AssertRecurseMlEventNotifRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MlEventNotif (e.g. [][]MlEventNotif), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMlEventNotifRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMlEventNotif, ok := obj.(MlEventNotif)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMlEventNotifRequired(aMlEventNotif)
	})
}
