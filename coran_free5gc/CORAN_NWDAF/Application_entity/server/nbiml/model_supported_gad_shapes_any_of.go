/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.0.0-alpha.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nbiml

type SupportedGadShapesAnyOf string

// List of SupportedGadShapesAnyOf
const (
	SUPPORTEDGADSHAPESANYOF_POINT                                 SupportedGadShapesAnyOf = "POINT"
	SUPPORTEDGADSHAPESANYOF_POINT_UNCERTAINTY_CIRCLE              SupportedGadShapesAnyOf = "POINT_UNCERTAINTY_CIRCLE"
	SUPPORTEDGADSHAPESANYOF_POINT_UNCERTAINTY_ELLIPSE             SupportedGadShapesAnyOf = "POINT_UNCERTAINTY_ELLIPSE"
	SUPPORTEDGADSHAPESANYOF_POLYGON                               SupportedGadShapesAnyOf = "POLYGON"
	SUPPORTEDGADSHAPESANYOF_POINT_ALTITUDE                        SupportedGadShapesAnyOf = "POINT_ALTITUDE"
	SUPPORTEDGADSHAPESANYOF_POINT_ALTITUDE_UNCERTAINTY            SupportedGadShapesAnyOf = "POINT_ALTITUDE_UNCERTAINTY"
	SUPPORTEDGADSHAPESANYOF_ELLIPSOID_ARC                         SupportedGadShapesAnyOf = "ELLIPSOID_ARC"
	SUPPORTEDGADSHAPESANYOF_LOCAL_2_D_POINT_UNCERTAINTY_ELLIPSE   SupportedGadShapesAnyOf = "LOCAL_2D_POINT_UNCERTAINTY_ELLIPSE"
	SUPPORTEDGADSHAPESANYOF_LOCAL_3_D_POINT_UNCERTAINTY_ELLIPSOID SupportedGadShapesAnyOf = "LOCAL_3D_POINT_UNCERTAINTY_ELLIPSOID"
)

// AssertSupportedGadShapesAnyOfRequired checks if the required fields are not zero-ed
func AssertSupportedGadShapesAnyOfRequired(obj SupportedGadShapesAnyOf) error {
	return nil
}

// AssertRecurseSupportedGadShapesAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SupportedGadShapesAnyOf (e.g. [][]SupportedGadShapesAnyOf), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSupportedGadShapesAnyOfRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSupportedGadShapesAnyOf, ok := obj.(SupportedGadShapesAnyOf)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSupportedGadShapesAnyOfRequired(aSupportedGadShapesAnyOf)
	})
}
