/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package analytics

// ThresholdLevel - Represents a threshold level.
type ThresholdLevel struct {
	CongLevel int32 `json:"congLevel,omitempty"`

	NfLoadLevel int32 `json:"nfLoadLevel,omitempty"`

	NfCpuUsage int32 `json:"nfCpuUsage,omitempty"`

	NfMemoryUsage int32 `json:"nfMemoryUsage,omitempty"`

	NfStorageUsage int32 `json:"nfStorageUsage,omitempty"`

	// String representing a bit rate prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\".
	AvgTrafficRate string `json:"avgTrafficRate,omitempty"`

	// String representing a bit rate prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\".
	MaxTrafficRate string `json:"maxTrafficRate,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
	AvgPacketDelay int32 `json:"avgPacketDelay,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
	MaxPacketDelay int32 `json:"maxPacketDelay,omitempty"`

	// Unsigned integer indicating Packet Loss Rate (see clauses 5.7.2.8 and 5.7.4 of 3GPP TS 23.501), expressed in tenth of percent.
	AvgPacketLossRate int32 `json:"avgPacketLossRate,omitempty"`
}

// AssertThresholdLevelRequired checks if the required fields are not zero-ed
func AssertThresholdLevelRequired(obj ThresholdLevel) error {
	return nil
}

// AssertRecurseThresholdLevelRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ThresholdLevel (e.g. [][]ThresholdLevel), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseThresholdLevelRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aThresholdLevel, ok := obj.(ThresholdLevel)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertThresholdLevelRequired(aThresholdLevel)
	})
}
