/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package analytics

// DnPerf - Represents DN performance for the application.
type DnPerf struct {
	AppServerInsAddr AddrFqdn `json:"appServerInsAddr,omitempty"`

	// Identifies the UPF.
	UpfId string `json:"upfId,omitempty"`

	// DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
	Dnai string `json:"dnai,omitempty"`

	PerfData PerfData `json:"perfData,omitempty"`

	SpatialValidCon NetworkAreaInfo `json:"spatialValidCon,omitempty"`

	TemporalValidCon TimeWindow `json:"temporalValidCon,omitempty"`
}

// AssertDnPerfRequired checks if the required fields are not zero-ed
func AssertDnPerfRequired(obj DnPerf) error {
	if err := AssertAddrFqdnRequired(obj.AppServerInsAddr); err != nil {
		return err
	}
	if err := AssertPerfDataRequired(obj.PerfData); err != nil {
		return err
	}
	if err := AssertNetworkAreaInfoRequired(obj.SpatialValidCon); err != nil {
		return err
	}
	if err := AssertTimeWindowRequired(obj.TemporalValidCon); err != nil {
		return err
	}
	return nil
}

// AssertRecurseDnPerfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DnPerf (e.g. [][]DnPerf), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDnPerfRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDnPerf, ok := obj.(DnPerf)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDnPerfRequired(aDnPerf)
	})
}
