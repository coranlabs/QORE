/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// UserDataCongestionInfo1 - Represents the user data congestion information.
type UserDataCongestionInfo1 struct {
	NetworkArea NetworkAreaInfo `json:"networkArea,omitempty"`

	CongestionInfo CongestionInfo1 `json:"congestionInfo,omitempty"`

	Snssai Snssai `json:"snssai,omitempty"`
}

// AssertUserDataCongestionInfo1Required checks if the required fields are not zero-ed
func AssertUserDataCongestionInfo1Required(obj UserDataCongestionInfo1) error {
	if err := AssertNetworkAreaInfoRequired(obj.NetworkArea); err != nil {
		return err
	}
	if err := AssertCongestionInfo1Required(obj.CongestionInfo); err != nil {
		return err
	}
	if err := AssertSnssaiRequired(obj.Snssai); err != nil {
		return err
	}
	return nil
}

// AssertRecurseUserDataCongestionInfo1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserDataCongestionInfo1 (e.g. [][]UserDataCongestionInfo1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserDataCongestionInfo1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserDataCongestionInfo1, ok := obj.(UserDataCongestionInfo1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUserDataCongestionInfo1Required(aUserDataCongestionInfo1)
	})
}
