/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

type FlowDirectionAnyOf string

// List of FlowDirectionAnyOf
const (
	FLOWDIRECTIONANYOF_DOWNLINK      FlowDirectionAnyOf = "DOWNLINK"
	FLOWDIRECTIONANYOF_UPLINK        FlowDirectionAnyOf = "UPLINK"
	FLOWDIRECTIONANYOF_BIDIRECTIONAL FlowDirectionAnyOf = "BIDIRECTIONAL"
	FLOWDIRECTIONANYOF_UNSPECIFIED   FlowDirectionAnyOf = "UNSPECIFIED"
)

// AssertFlowDirectionAnyOfRequired checks if the required fields are not zero-ed
func AssertFlowDirectionAnyOfRequired(obj FlowDirectionAnyOf) error {
	return nil
}

// AssertRecurseFlowDirectionAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of FlowDirectionAnyOf (e.g. [][]FlowDirectionAnyOf), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseFlowDirectionAnyOfRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aFlowDirectionAnyOf, ok := obj.(FlowDirectionAnyOf)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertFlowDirectionAnyOfRequired(aFlowDirectionAnyOf)
	})
}
