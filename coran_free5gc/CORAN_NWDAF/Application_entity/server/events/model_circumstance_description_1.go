/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

import (
	"time"
)

// CircumstanceDescription1 - Contains the description of a circumstance.
type CircumstanceDescription1 struct {

	// string with format 'float' as defined in OpenAPI.
	Freq float32 `json:"freq,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	Tm time.Time `json:"tm,omitempty"`

	LocArea NetworkAreaInfo `json:"locArea,omitempty"`

	// Unsigned integer identifying a volume in units of bytes.
	Vol int64 `json:"vol,omitempty"`
}

// AssertCircumstanceDescription1Required checks if the required fields are not zero-ed
func AssertCircumstanceDescription1Required(obj CircumstanceDescription1) error {
	if err := AssertNetworkAreaInfoRequired(obj.LocArea); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCircumstanceDescription1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CircumstanceDescription1 (e.g. [][]CircumstanceDescription1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCircumstanceDescription1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCircumstanceDescription1, ok := obj.(CircumstanceDescription1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCircumstanceDescription1Required(aCircumstanceDescription1)
	})
}
