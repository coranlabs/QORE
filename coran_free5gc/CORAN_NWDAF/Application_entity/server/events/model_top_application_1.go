/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// TopApplication1 - Top application that contributes the most to the traffic.
type TopApplication1 struct {

	// String providing an application identifier.
	AppId string `json:"appId,omitempty"`

	IpTrafficFilter FlowInfo `json:"ipTrafficFilter,omitempty"`

	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	Ratio int32 `json:"ratio,omitempty"`
}

// AssertTopApplication1Required checks if the required fields are not zero-ed
func AssertTopApplication1Required(obj TopApplication1) error {
	if err := AssertFlowInfoRequired(obj.IpTrafficFilter); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTopApplication1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TopApplication1 (e.g. [][]TopApplication1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTopApplication1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTopApplication1, ok := obj.(TopApplication1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTopApplication1Required(aTopApplication1)
	})
}
