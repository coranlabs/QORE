/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// DnPerfInfo1 - Represents DN performance information.
type DnPerfInfo1 struct {

	// String providing an application identifier.
	AppId string `json:"appId,omitempty"`

	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003; it shall contain either a DNN Network Identifier, or a full DNN with both the Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots (e.g. \"Label1.Label2.Label3\").
	Dnn string `json:"dnn,omitempty"`

	Snssai Snssai `json:"snssai,omitempty"`

	DnPerf []DnPerf1 `json:"dnPerf"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Confidence int32 `json:"confidence,omitempty"`
}

// AssertDnPerfInfo1Required checks if the required fields are not zero-ed
func AssertDnPerfInfo1Required(obj DnPerfInfo1) error {
	elements := map[string]interface{}{
		"dnPerf": obj.DnPerf,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertSnssaiRequired(obj.Snssai); err != nil {
		return err
	}
	for _, el := range obj.DnPerf {
		if err := AssertDnPerf1Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseDnPerfInfo1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DnPerfInfo1 (e.g. [][]DnPerfInfo1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDnPerfInfo1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDnPerfInfo1, ok := obj.(DnPerfInfo1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDnPerfInfo1Required(aDnPerfInfo1)
	})
}
