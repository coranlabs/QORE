/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// TnapId - Contain the TNAP Identifier see clause5.6.2 of 3GPP TS 23.501.
type TnapId struct {

	// This IE shall be present if the UE is accessing the 5GC via a trusted WLAN access network.When present, it shall contain the SSID of the access point to which the UE is attached, that is received over NGAP, see IEEE Std 802.11-2012.
	SsId string `json:"ssId,omitempty"`

	// When present, it shall contain the BSSID of the access point to which the UE is attached, that is received over NGAP, see IEEE Std 802.11-2012.
	BssId string `json:"bssId,omitempty"`

	// string with format 'bytes' as defined in OpenAPI
	CivicAddress string `json:"civicAddress,omitempty"`
}

// AssertTnapIdRequired checks if the required fields are not zero-ed
func AssertTnapIdRequired(obj TnapId) error {
	return nil
}

// AssertRecurseTnapIdRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TnapId (e.g. [][]TnapId), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTnapIdRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTnapId, ok := obj.(TnapId)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTnapIdRequired(aTnapId)
	})
}
