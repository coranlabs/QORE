From 384c596805b40904e8d9709f2ea2183c90ded9a8 Mon Sep 17 00:00:00 2001
From: Lakshya Chopra <lakshyachopra2707@gmail.com>
Date: Sun, 10 Nov 2024 07:29:05 +0000
Subject: [PATCH] ADD: PQ-mTLS in SBI

---
 .netrc                                  |  2 +-
 Application_entity/server/sbi/server.go | 75 ++++++++++++++++++++++++-
 Dockerfile                              | 33 ++++++++++-
 go.mod                                  | 11 ++--
 go.sum                                  | 16 +++---
 httpwrapper                             |  1 +
 6 files changed, 121 insertions(+), 17 deletions(-)
 create mode 160000 httpwrapper

diff --git a/.netrc b/.netrc
index be78029..2694f94 100644
--- a/.netrc
+++ b/.netrc
@@ -1,3 +1,3 @@
 # .netrc
 ## generate token with https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
-machine github.com login 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
\ No newline at end of file
+machine github.com login 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 #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
diff --git a/Application_entity/server/sbi/server.go b/Application_entity/server/sbi/server.go
index 1841b5c..1112778 100644
--- a/Application_entity/server/sbi/server.go
+++ b/Application_entity/server/sbi/server.go
@@ -2,23 +2,29 @@ package sbi
 
 import (
 	"context"
+	"crypto/tls"
+	"crypto/x509"
+	"encoding/pem"
 	"fmt"
+	"io/ioutil"
+	"log"
 	"net"
 	"net/http"
 	"runtime/debug"
+	"strings"
 	"sync"
 	"time"
 
 	"github.com/gin-gonic/gin"
 
 	"github.com/coranlabs/CORAN_LIB_OPENAPI/models"
-	"github.com/coranlabs/CORAN_LIB_UTIL/httpwrapper"
 	logger_util "github.com/coranlabs/CORAN_LIB_UTIL/logger"
 	"github.com/coranlabs/CORAN_NRF/Application_entity/logger"
 	"github.com/coranlabs/CORAN_NRF/Application_entity/pkg/app"
 	"github.com/coranlabs/CORAN_NRF/Application_entity/pkg/factory"
 	"github.com/coranlabs/CORAN_NRF/Application_entity/server/sbi/processor"
 	"github.com/coranlabs/CORAN_NRF/Application_entity/util"
+	"github.com/lakshya-chopra/httpwrapper"
 )
 
 type ServerNrf interface {
@@ -35,6 +41,58 @@ type Server struct {
 	router     *gin.Engine
 }
 
+func PrintCertificateDetails(cert *x509.Certificate) {
+
+	sep := strings.Repeat("-", 15)
+
+	fmt.Printf("\n%s Server Certificate%s\n", sep, sep)
+
+	fmt.Printf("Subject: %s\n", cert.Subject)
+	fmt.Printf("Issuer: %s\n", cert.Issuer)
+	fmt.Printf("Serial Number: %s\n", cert.SerialNumber)
+	fmt.Printf("Not Before: %s\n", cert.NotBefore)
+	fmt.Printf("Not After: %s\n", cert.NotAfter)
+	fmt.Printf("Key Usage: %x\n", cert.KeyUsage)
+	fmt.Printf("Ext Key Usage: %v\n", cert.ExtKeyUsage)
+	fmt.Printf("DNS Names: %v\n", cert.DNSNames)
+	// fmt.Printf("Email Addresses: %v\n", cert.EmailAddresses)
+	fmt.Printf("IP Addresses: %v\n", cert.IPAddresses)
+	// fmt.Printf("URIs: %v\n", cert.URIs)
+	fmt.Printf("Signature Algorithm: %s\n", cert.SignatureAlgorithm)
+
+	fmt.Println("\nPEM Encoded Certificate:")
+	pemBlock := &pem.Block{
+		Type:  "CERTIFICATE",
+		Bytes: cert.Raw,
+	}
+	pemBytes := pem.EncodeToMemory(pemBlock)
+	fmt.Println(string(pemBytes))
+
+	fmt.Printf("%s End %s", sep, sep)
+}
+
+func ReadCertificate(filename string) (*x509.Certificate, error) {
+	// Read the certificate file
+	certPEM, err := ioutil.ReadFile(filename)
+	if err != nil {
+		return nil, fmt.Errorf("failed to read certificate file: %w", err)
+	}
+
+	// Decode the PEM block
+	block, _ := pem.Decode(certPEM)
+	if block == nil || block.Type != "CERTIFICATE" {
+		return nil, fmt.Errorf("failed to decode PEM block containing certificate")
+	}
+
+	// Parse the certificate
+	cert, err := x509.ParseCertificate(block.Bytes)
+	if err != nil {
+		return nil, fmt.Errorf("failed to parse certificate: %w", err)
+	}
+
+	return cert, nil
+}
+
 func NewServer(nrf ServerNrf, tlsKeyLogPath string) (*Server, error) {
 	s := &Server{
 		ServerNrf: nrf,
@@ -46,8 +104,21 @@ func NewServer(nrf ServerNrf, tlsKeyLogPath string) (*Server, error) {
 
 	s.applyService()
 
+	server_cert, err1 := tls.LoadX509KeyPair(cfg.GetNrfCertPemPath(), cfg.GetNrfPrivKeyPath())
+
+	if err1 != nil {
+		log.Fatal(err1)
+	}
+
+	cert, err2 := ReadCertificate(cfg.GetNrfCertPemPath())
+	if err2 != nil {
+		log.Fatal(err2)
+	} else {
+		PrintCertificateDetails(cert)
+	}
+
 	var err error
-	if s.httpServer, err = httpwrapper.NewHttp2Server(bindAddr, tlsKeyLogPath, s.router); err != nil {
+	if s.httpServer, err = httpwrapper.NewHttp2Server(bindAddr, tlsKeyLogPath, s.router, server_cert); err != nil {
 		logger.InitLog.Errorf("Initialize HTTP server failed: %v", err)
 		return nil, err
 	}
diff --git a/Dockerfile b/Dockerfile
index 1e12144..f81eb52 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,11 +1,40 @@
 # Stage 1
-FROM golang:1.23.0-alpine AS builder
+FROM golang:1.23.0-bullseye AS builder
 WORKDIR /nrf
 COPY .netrc /root/.netrc
 COPY . /nrf
-RUN apk add --no-cache git
+RUN apt install git
 RUN go env -w GOPRIVATE=github.com/coranlabs
 RUN go mod download
+
+# RUN git clone https://github.com/lakshya-chopra/go /cloudflare-go
+# WORKDIR /cloudflare-go/src
+# RUN ./make.bash
+
+# ENV GOROOT /cloudflare-go 
+# ENV PATH $GOROOT/bin:$GOPATH/bin:$PATH
+# ENV go /cloudflare-go/bin/go
+
+
+RUN mkdir -p /go-1.23
+RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \
+    && tar -C /go-1.23 -xzf go1.23.0.linux-amd64.tar.gz
+ENV GOROOT_BOOTSTRAP=/go-1.23/go
+
+
+RUN git clone https://github.com/lakshya-chopra/go /cloudflare-go
+RUN rm -rf /usr/local/go/src/crypto
+RUN rm -rf /usr/local/go/src/vendor
+RUN cp /cloudflare-go/src/crypto -R /usr/local/go/src/crypto
+RUN cp /cloudflare-go/src/vendor -R /usr/local/go/src/vendor
+WORKDIR /usr/local/go/src/
+
+RUN ./make.bash
+
+WORKDIR /nrf
+
+
+
 RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o nrf ./main.go
 
 # Stage 2
diff --git a/go.mod b/go.mod
index 768986f..fe20255 100644
--- a/go.mod
+++ b/go.mod
@@ -9,6 +9,7 @@ require (
 	github.com/gin-gonic/gin v1.10.0
 	github.com/golang-jwt/jwt/v5 v5.2.1
 	github.com/google/uuid v1.6.0
+	github.com/lakshya-chopra/httpwrapper v0.0.3
 	github.com/mitchellh/mapstructure v1.5.0
 	github.com/pkg/errors v0.9.1
 	github.com/sirupsen/logrus v1.9.3
@@ -66,15 +67,17 @@ require (
 	go.uber.org/atomic v1.9.0 // indirect
 	go.uber.org/multierr v1.9.0 // indirect
 	golang.org/x/arch v0.8.0 // indirect
-	golang.org/x/crypto v0.26.0 // indirect
+	golang.org/x/crypto v0.28.0 // indirect
 	golang.org/x/exp v0.0.0-20230905200255-921286631fa9 // indirect
-	golang.org/x/net v0.28.0 // indirect
+	golang.org/x/net v0.30.0 // indirect
 	golang.org/x/oauth2 v0.22.0 // indirect
 	golang.org/x/sync v0.8.0 // indirect
-	golang.org/x/sys v0.23.0 // indirect
-	golang.org/x/text v0.17.0 // indirect
+	golang.org/x/sys v0.26.0 // indirect
+	golang.org/x/text v0.19.0 // indirect
 	google.golang.org/protobuf v1.34.1 // indirect
 	gopkg.in/h2non/gock.v1 v1.1.2 // indirect
 	gopkg.in/ini.v1 v1.67.0 // indirect
 	gopkg.in/yaml.v3 v3.0.1 // indirect
 )
+
+replace github.com/lakshya-chopra/httpwrapper => ./httpwrapper
diff --git a/go.sum b/go.sum
index c32b0c0..262c2ed 100644
--- a/go.sum
+++ b/go.sum
@@ -162,16 +162,16 @@ golang.org/x/arch v0.8.0 h1:3wRIsP3pM4yUptoR96otTUOXI367OS0+c9eeRi9doIc=
 golang.org/x/arch v0.8.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=
 golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
 golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.26.0 h1:RrRspgV4mU+YwB4FYnuBoKsUapNIL5cohGAmSH3azsw=
-golang.org/x/crypto v0.26.0/go.mod h1:GY7jblb9wI+FOo5y8/S2oY4zWP07AkOJ4+jxCqdqn54=
+golang.org/x/crypto v0.28.0 h1:GBDwsMXVQi34v5CCYUm2jkJvu4cbtru2U4TN2PSyQnw=
+golang.org/x/crypto v0.28.0/go.mod h1:rmgy+3RHxRZMyY0jjAJShp2zgEdOqj2AO7U0pYmeQ7U=
 golang.org/x/exp v0.0.0-20230905200255-921286631fa9 h1:GoHiUyI/Tp2nVkLI2mCxVkOjsbSXD66ic0XW0js0R9g=
 golang.org/x/exp v0.0.0-20230905200255-921286631fa9/go.mod h1:S2oDrQGGwySpoQPVqRShND87VCbxmc6bL1Yd2oYrm6k=
 golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=
 golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
 golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
 golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
-golang.org/x/net v0.28.0 h1:a9JDOJc5GMUJ0+UDqmLT86WiEy7iWyIhz8gz8E4e5hE=
-golang.org/x/net v0.28.0/go.mod h1:yqtgsTWOOnlGLG9GFRrK3++bGOUEkNBoHZc8MEDWPNg=
+golang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=
+golang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=
 golang.org/x/oauth2 v0.22.0 h1:BzDx2FehcG7jJwgWLELCdmLuxk2i+x9UDpSiss2u0ZA=
 golang.org/x/oauth2 v0.22.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=
 golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
@@ -186,16 +186,16 @@ golang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBc
 golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.23.0 h1:YfKFowiIMvtgl1UERQoTPPToxltDeZfbj4H7dVUCwmM=
-golang.org/x/sys v0.23.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
+golang.org/x/sys v0.26.0 h1:KHjCJyddX0LoSTb3J+vWpupP9p0oznkqVk/IfjymZbo=
+golang.org/x/sys v0.26.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
 golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
 golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
 golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
 golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
 golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
 golang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=
-golang.org/x/text v0.17.0 h1:XtiM5bkSOt+ewxlOE/aE/AKEHibwj/6gvWMl9Rsh0Qc=
-golang.org/x/text v0.17.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=
+golang.org/x/text v0.19.0 h1:kTxAhCbGbxhK0IwgSKiMO5awPoDQ0RpfiVYBfK860YM=
+golang.org/x/text v0.19.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=
 golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
 golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
 golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
diff --git a/httpwrapper b/httpwrapper
new file mode 160000
index 0000000..91350c2
--- /dev/null
+++ b/httpwrapper
@@ -0,0 +1 @@
+Subproject commit 91350c23d2c82fa96f13b2a6cf9dd10cbb3327dd
-- 
2.43.0

