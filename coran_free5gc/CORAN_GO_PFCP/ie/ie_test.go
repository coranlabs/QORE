// Copyright 2019-2024 go-pfcp authors. All rights reserved.
// Use of this source code is governed by a MIT-style license that can be
// found in the LICENSE file.

package ie_test

import (
	"io"
	"net"
	"testing"
	"time"

	"github.com/coranlabs/CORAN_GO_PFCP/ie"
	"github.com/google/go-cmp/cmp"
)

func TestIEs(t *testing.T) {
	var (
		mac1, _ = net.ParseMAC("12:34:56:78:90:01")
		mac2, _ = net.ParseMAC("12:34:56:78:90:02")
		mac3, _ = net.ParseMAC("12:34:56:78:90:03")
		mac4, _ = net.ParseMAC("12:34:56:78:90:04")
	)

	cases := []struct {
		description string
		structured  *ie.IE
		serialized  []byte
	}{
		{
			"CreatePDR",
			ie.NewCreatePDR(
				ie.NewPDRID(0xffff),
				ie.NewPrecedence(0x11111111),
				ie.NewPDI(
					ie.NewSourceInterface(ie.SrcInterfaceAccess),
					ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
					ie.NewNetworkInstance("some.instance.example"),
					ie.NewRedundantTransmissionParametersInPDI(
						ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
						ie.NewNetworkInstance("some.instance.example"),
					),
					ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
					ie.NewTrafficEndpointID(0x01),
					ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
					ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
					ie.NewEthernetPDUSessionInformation(0x01),
					ie.NewEthernetPacketFilter(
						ie.NewEthernetFilterID(0xffffffff),
						ie.NewEthernetFilterProperties(0x01),
						ie.NewMACAddress(mac1, mac2, mac3, mac4),
						ie.NewEthertype(0xffff),
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
					),
				),
				ie.NewOuterHeaderRemoval(0x01, 0x02),
				ie.NewFARID(0xffffffff),
				ie.NewURRID(0xffffffff),
				ie.NewQERID(0xffffffff),
				ie.NewActivatePredefinedRules("go-pfcp"),
				ie.NewActivationTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewDeactivationTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewMARID(0x1111),
				ie.NewPacketReplicationAndDetectionCarryOnInformation(0x0f),
				ie.NewIPMulticastAddressingInfo(
					ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
					ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
				),
				ie.NewUEIPAddressPoolIdentity("go-pfcp"),
				ie.NewMPTCPApplicableIndication(0x01),
				ie.NewTransportDelayReporting(
					ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
					ie.NewTransportLevelMarking(0x1111),
				),
			),
			[]byte{
				0x00, 0x01, 0x01, 0xb8,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x1d, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x02, 0x01, 0x09,
				0x00, 0x14, 0x00, 0x01, 0x00,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x8e, 0x00, 0x01, 0x01,
				0x00, 0x84, 0x00, 0x5b,
				0x00, 0x8a, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x8b, 0x00, 0x01, 0x01,
				0x00, 0x85, 0x00, 0x19, 0x0f,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x03,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x00, 0x88, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x86, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x87, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
				0x00, 0x5f, 0x00, 0x02, 0x01, 0x02,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x6a, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0xa3, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0xa4, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0xaa, 0x00, 0x02, 0x11, 0x11,
				0x00, 0xb3, 0x00, 0x01, 0x0f,
				0x00, 0xbc, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
				0x00, 0xb1, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x01, 0x09, 0x00, 0x01, 0x01,
				0x01, 0x0f, 0x00, 0x29,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"PDI",
			ie.NewPDI(
				ie.NewSourceInterface(ie.SrcInterfaceAccess),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewRedundantTransmissionParametersInPDI(
					ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
				ie.NewTrafficEndpointID(0x01),
				ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
				ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
				ie.NewEthernetPDUSessionInformation(0x01),
				ie.NewEthernetPacketFilter(
					ie.NewEthernetFilterID(0xffffffff),
					ie.NewEthernetFilterProperties(0x01),
					ie.NewMACAddress(mac1, mac2, mac3, mac4),
					ie.NewEthertype(0xffff),
					ie.NewCTAG(0x07, 1, 1, 4095),
					ie.NewSTAG(0x07, 1, 1, 4095),
					ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
				),
			),
			[]byte{
				0x00, 0x02, 0x01, 0x09,
				0x00, 0x14, 0x00, 0x01, 0x00,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x8e, 0x00, 0x01, 0x01,
				0x00, 0x84, 0x00, 0x5b,
				0x00, 0x8a, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x8b, 0x00, 0x01, 0x01,
				0x00, 0x85, 0x00, 0x19, 0x0f,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x03,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x00, 0x88, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x86, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x87, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
			},
		}, {
			"PDI/WithNIL",
			ie.NewPDI(
				ie.NewSourceInterface(ie.SrcInterfaceAccess),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewRedundantTransmissionParametersInPDI(
					ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
				ie.NewTrafficEndpointID(0x01),
				nil,
				ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
				ie.NewEthernetPDUSessionInformation(0x01),
				ie.NewEthernetPacketFilter(
					ie.NewEthernetFilterID(0xffffffff),
					ie.NewEthernetFilterProperties(0x01),
					ie.NewMACAddress(mac1, mac2, mac3, mac4),
					ie.NewEthertype(0xffff),
					ie.NewCTAG(0x07, 1, 1, 4095),
					ie.NewSTAG(0x07, 1, 1, 4095),
					ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
				),
			),
			[]byte{
				0x00, 0x02, 0x00, 0xec,
				0x00, 0x14, 0x00, 0x01, 0x00,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x8e, 0x00, 0x01, 0x01,
				0x00, 0x84, 0x00, 0x5b,
				0x00, 0x8a, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x8b, 0x00, 0x01, 0x01,
				0x00, 0x85, 0x00, 0x19, 0x0f,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x03,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x00, 0x88, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x86, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x87, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
			},
		}, {
			"CreateFAR",
			ie.NewCreateFAR(
				ie.NewFARID(0xffffffff),
				ie.NewApplyAction(0x04, 0x00),
				ie.NewForwardingParameters(
					ie.NewDestinationInterface(ie.DstInterfaceAccess),
					ie.NewNetworkInstance("some.instance.example"),
					ie.NewRedirectInformation(ie.RedirectAddrIPv4AndIPv6, "127.0.0.1", "2001::1"),
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewTransportLevelMarking(0x1111),
					ie.NewForwardingPolicy("go-pfcp"),
					ie.NewHeaderEnrichment(ie.HeaderTypeHTTP, "name", "value"),
					ie.NewTrafficEndpointID(0x01),
					ie.NewProxying(1, 1),
					ie.NewTGPPInterfaceType(ie.TGPPInterfaceTypeS1U),
					ie.NewDataNetworkAccessIdentifier("go-pfcp"),
				),
				ie.NewDuplicatingParameters(
					ie.NewDestinationInterface(ie.DstInterfaceAccess),
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewTransportLevelMarking(0x1111),
					ie.NewForwardingPolicy("go-pfcp"),
				),
				ie.NewBARID(0xff),
				ie.NewRedundantTransmissionParametersInFAR(
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
				ie.NewRedundantTransmissionForwardingParameters(
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
			),
			[]byte{
				0x00, 0x03, 0x01, 0x17,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x2c, 0x00, 0x02, 0x04, 0x00,
				0x00, 0x04, 0x00, 0x81,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x26, 0x00, 0x15, 0x04, 0x00, 0x09, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x00, 0x07, 0x32, 0x30, 0x30, 0x31, 0x3a, 0x3a, 0x31,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x62, 0x00, 0x0c, 0x00, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x89, 0x00, 0x01, 0x03,
				0x00, 0xa0, 0x00, 0x01, 0x00,
				0x00, 0xe8, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x05, 0x00, 0x25,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x58, 0x00, 0x01, 0xff,
				0x00, 0xff, 0x00, 0x27,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x01, 0x0e, 0x00, 0x27,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"ForwardingParameters",
			ie.NewForwardingParameters(
				ie.NewDestinationInterface(ie.DstInterfaceAccess),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewRedirectInformation(ie.RedirectAddrIPv4AndIPv6, "127.0.0.1", "2001::1"),
				ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
				ie.NewTransportLevelMarking(0x1111),
				ie.NewForwardingPolicy("go-pfcp"),
				ie.NewHeaderEnrichment(ie.HeaderTypeHTTP, "name", "value"),
				ie.NewTrafficEndpointID(0x01),
				ie.NewProxying(1, 1),
				ie.NewTGPPInterfaceType(ie.TGPPInterfaceTypeS1U),
				ie.NewDataNetworkAccessIdentifier("go-pfcp"),
			),
			[]byte{
				0x00, 0x04, 0x00, 0x81,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x26, 0x00, 0x15, 0x04, 0x00, 0x09, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x00, 0x07, 0x32, 0x30, 0x30, 0x31, 0x3a, 0x3a, 0x31,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x62, 0x00, 0x0c, 0x00, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x89, 0x00, 0x01, 0x03,
				0x00, 0xa0, 0x00, 0x01, 0x00,
				0x00, 0xe8, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"DuplicatingParameters",
			ie.NewDuplicatingParameters(
				ie.NewDestinationInterface(ie.DstInterfaceAccess),
				ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
				ie.NewTransportLevelMarking(0x1111),
				ie.NewForwardingPolicy("go-pfcp"),
			),
			[]byte{
				0x00, 0x05, 0x00, 0x25,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"CreateURR",
			ie.NewCreateURR(
				ie.NewURRID(0xffffffff),
				ie.NewMeasurementMethod(1, 1, 1),
				ie.NewReportingTriggers(0x11, 0x22),
				ie.NewMeasurementPeriod(10*time.Second),
				ie.NewVolumeThreshold(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
				ie.NewVolumeQuota(0x07, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff),
				ie.NewEventThreshold(0xffffffff),
				ie.NewEventQuota(0xffffffff),
				ie.NewTimeThreshold(10*time.Second),
				ie.NewTimeQuota(10*time.Second),
				ie.NewQuotaHoldingTime(10*time.Second),
				ie.NewDroppedDLTrafficThreshold(true, true, 0xffffffffffffffff, 0xffffffffffffffff),
				ie.NewQuotaValidityTime(10*time.Second),
				ie.NewMonitoringTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewSubsequentVolumeThreshold(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
				ie.NewSubsequentTimeThreshold(10*time.Second),
				ie.NewSubsequentVolumeQuota(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
				ie.NewSubsequentTimeQuota(10*time.Second),
				ie.NewSubsequentEventThreshold(0xffffffff),
				ie.NewSubsequentEventQuota(0xffffffff),
				ie.NewInactivityDetectionTime(0x11111111),
				ie.NewLinkedURRID(0xffffffff),
				ie.NewMeasurementInformation(0x1f),
				ie.NewTimeQuotaMechanism(ie.BTITCTP, 10*time.Second),
				ie.NewAggregatedURRs(
					ie.NewAggregatedURRID(0xffffffff),
					ie.NewMultiplier(0xffffffffffffffff, 0x11223344),
				),
				ie.NewFARID(0xffffffff),
				ie.NewEthernetInactivityTimer(10*time.Second),
				ie.NewAdditionalMonitoringTime(
					ie.NewMonitoringTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
					ie.NewSubsequentVolumeThreshold(0x01, 0x1111111111111111, 0, 0),
					ie.NewSubsequentTimeThreshold(10*time.Second),
					ie.NewSubsequentVolumeQuota(0x01, 0x1111111111111111, 0, 0),
					ie.NewSubsequentTimeQuota(10*time.Second),
					ie.NewEventThreshold(0xffffffff),
					ie.NewEventQuota(0xffffffff),
				),
				ie.NewNumberOfReports(0x1111),
			),
			[]byte{
				0x00, 0x06, 0x01, 0x92,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x3e, 0x00, 0x01, 0x07,
				0x00, 0x25, 0x00, 0x02, 0x11, 0x22,
				0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x1f, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x49, 0x00, 0x19, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x95, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x94, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x4a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x47, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x48, 0x00, 0x11, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xb5, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x21, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x22, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x23, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x79, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x7a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x97, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x96, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x24, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x52, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x64, 0x00, 0x01, 0x1f,
				0x00, 0x73, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x76, 0x00, 0x18,
				0x00, 0x78, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x77, 0x00, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x11, 0x22, 0x33, 0x44,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x92, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x93, 0x00, 0x42,
				0x00, 0x21, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x22, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x23, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x79, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x7a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x95, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x94, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xb6, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"CreateQER",
			ie.NewCreateQER(
				ie.NewQERID(0xffffffff),
				ie.NewQERCorrelationID(0x11111111),
				ie.NewGateStatus(ie.GateStatusOpen, ie.GateStatusOpen),
				ie.NewMBR(0x1111111111, 0x2222222222),
				ie.NewGBR(0x1111111111, 0x2222222222),
				ie.NewPacketRate(0x03, ie.TimeUnitMinute, 0x1122, ie.TimeUnitMinute, 0x3344),
				ie.NewPacketRateStatus(0x07, 0x1111, 0x2222, 0x3333, 0x4444, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewDLFlowLevelMarking(0x03, 0x1122, 0x3344),
				ie.NewQFI(0x01),
				ie.NewRQI(0x01),
				ie.NewPagingPolicyIndicator(1),
				ie.NewAveragingWindow(0xffffffff),
				ie.NewQERControlIndications(1, 1, 1),
			),
			[]byte{
				0x00, 0x07, 0x00, 0x76,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x1c, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x19, 0x00, 0x01, 0x00,
				0x00, 0x1a, 0x00, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x1b, 0x00, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x5e, 0x00, 0x07, 0x03, 0x00, 0x11, 0x22, 0x00, 0x33, 0x44,
				0x00, 0xc1, 0x00, 0x11,
				0x07,
				0x11, 0x11,
				0x22, 0x22,
				0x33, 0x33,
				0x44, 0x44,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x61, 0x00, 0x05, 0x03, 0x11, 0x22, 0x33, 0x44,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0x7b, 0x00, 0x01, 0x01,
				0x00, 0x9e, 0x00, 0x01, 0x01,
				0x00, 0x9d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xfb, 0x00, 0x01, 0x07,
			},
		}, {
			"CreatedPDR",
			ie.NewCreatedPDR(
				ie.NewPDRID(0xffff),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
			),
			[]byte{
				0x00, 0x08, 0x00, 0x29,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"UpdatePDR",
			ie.NewUpdatePDR(
				ie.NewPDRID(0xffff),
				ie.NewOuterHeaderRemoval(0x01, 0x02),
				ie.NewPrecedence(0x11111111),
				ie.NewPDI(
					ie.NewSourceInterface(ie.SrcInterfaceAccess),
					ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
					ie.NewNetworkInstance("some.instance.example"),
					ie.NewRedundantTransmissionParametersInPDI(
						ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
						ie.NewNetworkInstance("some.instance.example"),
					),
					ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
					ie.NewTrafficEndpointID(0x01),
					ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
					ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
					ie.NewEthernetPDUSessionInformation(0x01),
					ie.NewEthernetPacketFilter(
						ie.NewEthernetFilterID(0xffffffff),
						ie.NewEthernetFilterProperties(0x01),
						ie.NewMACAddress(mac1, mac2, mac3, mac4),
						ie.NewEthertype(0xffff),
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
					),
				),
				ie.NewFARID(0xffffffff),
				ie.NewURRID(0xffffffff),
				ie.NewQERID(0xffffffff),
				ie.NewActivatePredefinedRules("go-pfcp"),
				ie.NewDeactivatePredefinedRules("go-pfcp"),
				ie.NewActivationTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewDeactivationTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewIPMulticastAddressingInfo(
					ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
					ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
				),
				ie.NewTransportDelayReporting(
					ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
					ie.NewTransportLevelMarking(0x1111),
				),
			),
			[]byte{
				0x00, 0x09, 0x01, 0xa7,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x5f, 0x00, 0x02, 0x01, 0x02,
				0x00, 0x1d, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x02, 0x01, 0x09,
				0x00, 0x14, 0x00, 0x01, 0x00,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x8e, 0x00, 0x01, 0x01,
				0x00, 0x84, 0x00, 0x5b,
				0x00, 0x8a, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x8b, 0x00, 0x01, 0x01,
				0x00, 0x85, 0x00, 0x19, 0x0f,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x03,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x00, 0x88, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x86, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x87, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x6a, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x6b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0xa3, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0xa4, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0xbc, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
				0x01, 0x0f, 0x00, 0x29,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"UpdateFAR",
			ie.NewUpdateFAR(
				ie.NewFARID(0xffffffff),
				ie.NewApplyAction(0x04, 0x00),
				ie.NewUpdateForwardingParameters(
					ie.NewDestinationInterface(ie.DstInterfaceAccess),
					ie.NewNetworkInstance("some.instance.example"),
					ie.NewRedirectInformation(ie.RedirectAddrIPv4AndIPv6, "127.0.0.1", "2001::1"),
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewTransportLevelMarking(0x1111),
					ie.NewForwardingPolicy("go-pfcp"),
					ie.NewHeaderEnrichment(ie.HeaderTypeHTTP, "name", "value"),
					ie.NewPFCPSMReqFlags(0x03),
					ie.NewTrafficEndpointID(0x01),
					ie.NewTGPPInterfaceType(ie.TGPPInterfaceTypeS1U),
					ie.NewDataNetworkAccessIdentifier("go-pfcp"),
				),
				ie.NewUpdateDuplicatingParameters(
					ie.NewDestinationInterface(ie.DstInterfaceAccess),
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewTransportLevelMarking(0x1111),
					ie.NewForwardingPolicy("go-pfcp"),
				),
				ie.NewBARID(0xff),
				ie.NewRedundantTransmissionParametersInFAR(
					ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
			),
			[]byte{
				0x00, 0x0a, 0x00, 0xec,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x2c, 0x00, 0x02, 0x04, 0x00,
				0x00, 0x0b, 0x00, 0x81,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x26, 0x00, 0x15, 0x04, 0x00, 0x09, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x00, 0x07, 0x32, 0x30, 0x30, 0x31, 0x3a, 0x3a, 0x31,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x62, 0x00, 0x0c, 0x00, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
				0x00, 0x31, 0x00, 0x01, 0x03,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0xa0, 0x00, 0x01, 0x00,
				0x00, 0xe8, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x69, 0x00, 0x25,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x58, 0x00, 0x01, 0xff,
				0x00, 0xff, 0x00, 0x27,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"UpdateForwardingParameters",
			ie.NewUpdateForwardingParameters(
				ie.NewDestinationInterface(ie.DstInterfaceAccess),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewRedirectInformation(ie.RedirectAddrIPv4AndIPv6, "127.0.0.1", "2001::1"),
				ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
				ie.NewTransportLevelMarking(0x1111),
				ie.NewForwardingPolicy("go-pfcp"),
				ie.NewHeaderEnrichment(ie.HeaderTypeHTTP, "name", "value"),
				ie.NewPFCPSMReqFlags(0x03),
				ie.NewTrafficEndpointID(0x01),
				ie.NewTGPPInterfaceType(ie.TGPPInterfaceTypeS1U),
				ie.NewDataNetworkAccessIdentifier("go-pfcp"),
			),
			[]byte{
				0x00, 0x0b, 0x00, 0x81,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x26, 0x00, 0x15, 0x04, 0x00, 0x09, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x00, 0x07, 0x32, 0x30, 0x30, 0x31, 0x3a, 0x3a, 0x31,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x62, 0x00, 0x0c, 0x00, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
				0x00, 0x31, 0x00, 0x01, 0x03,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0xa0, 0x00, 0x01, 0x00,
				0x00, 0xe8, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"UpdateBARWithinSessionReportResponse",
			ie.NewUpdateBARWithinSessionReportResponse(
				ie.NewBARID(0xff),
				ie.NewDownlinkDataNotificationDelay(100*time.Millisecond),
				ie.NewDLBufferingDuration(30*time.Second),
				ie.NewDLBufferingSuggestedPacketCount(0xffff),
				ie.NewSuggestedBufferingPacketsCount(0x01),
			),
			[]byte{
				0x00, 0x0c, 0x00, 0x1a,
				0x00, 0x58, 0x00, 0x01, 0xff,
				0x00, 0x2e, 0x00, 0x01, 0x02,
				0x00, 0x2f, 0x00, 0x01, 0x0f,
				0x00, 0x30, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x8c, 0x00, 0x01, 0x01,
			},
		}, {
			"UpdateURR",
			ie.NewUpdateURR(
				ie.NewURRID(0xffffffff),
				ie.NewMeasurementMethod(1, 1, 1),
				ie.NewReportingTriggers(0x11, 0x22),
				ie.NewMeasurementPeriod(10*time.Second),
				ie.NewVolumeThreshold(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
				ie.NewVolumeQuota(0x07, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff),
				ie.NewEventThreshold(0xffffffff),
				ie.NewEventQuota(0xffffffff),
				ie.NewTimeThreshold(10*time.Second),
				ie.NewTimeQuota(10*time.Second),
				ie.NewQuotaHoldingTime(10*time.Second),
				ie.NewDroppedDLTrafficThreshold(true, true, 0xffffffffffffffff, 0xffffffffffffffff),
				ie.NewQuotaValidityTime(10*time.Second),
				ie.NewMonitoringTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewSubsequentVolumeThreshold(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
				ie.NewSubsequentTimeThreshold(10*time.Second),
				ie.NewSubsequentVolumeQuota(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
				ie.NewSubsequentTimeQuota(10*time.Second),
				ie.NewSubsequentEventThreshold(0xffffffff),
				ie.NewSubsequentEventQuota(0xffffffff),
				ie.NewInactivityDetectionTime(0x11111111),
				ie.NewLinkedURRID(0xffffffff),
				ie.NewMeasurementInformation(0x1f),
				ie.NewTimeQuotaMechanism(ie.BTITCTP, 10*time.Second),
				ie.NewAggregatedURRs(
					ie.NewAggregatedURRID(0xffffffff),
					ie.NewMultiplier(0xffffffffffffffff, 0x11223344),
				),
				ie.NewFARID(0xffffffff),
				ie.NewEthernetInactivityTimer(10*time.Second),
				ie.NewAdditionalMonitoringTime(
					ie.NewMonitoringTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
					ie.NewSubsequentVolumeThreshold(0x01, 0x1111111111111111, 0, 0),
					ie.NewSubsequentTimeThreshold(10*time.Second),
					ie.NewSubsequentVolumeQuota(0x01, 0x1111111111111111, 0, 0),
					ie.NewSubsequentTimeQuota(10*time.Second),
					ie.NewEventThreshold(0xffffffff),
					ie.NewEventQuota(0xffffffff),
				),
				ie.NewNumberOfReports(0x1111),
			),
			[]byte{
				0x00, 0x0d, 0x01, 0x92,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x3e, 0x00, 0x01, 0x07,
				0x00, 0x25, 0x00, 0x02, 0x11, 0x22,
				0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x1f, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x49, 0x00, 0x19, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x95, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x94, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x4a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x47, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x48, 0x00, 0x11, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xb5, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x21, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x22, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x23, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x79, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x7a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x97, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x96, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x24, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x52, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x64, 0x00, 0x01, 0x1f,
				0x00, 0x73, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x76, 0x00, 0x18,
				0x00, 0x78, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x77, 0x00, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x11, 0x22, 0x33, 0x44,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x92, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x93, 0x00, 0x42,
				0x00, 0x21, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x22, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x23, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x79, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x7a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x95, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x94, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xb6, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"UpdateQER",
			ie.NewUpdateQER(
				ie.NewQERID(0xffffffff),
				ie.NewQERCorrelationID(0x11111111),
				ie.NewGateStatus(ie.GateStatusOpen, ie.GateStatusOpen),
				ie.NewMBR(0x1111111111, 0x2222222222),
				ie.NewGBR(0x1111111111, 0x2222222222),
				ie.NewPacketRate(0x03, ie.TimeUnitMinute, 0x1122, ie.TimeUnitMinute, 0x3344),
				ie.NewPacketRateStatus(0x07, 0x1111, 0x2222, 0x3333, 0x4444, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewDLFlowLevelMarking(0x03, 0x1122, 0x3344),
				ie.NewQFI(0x01),
				ie.NewRQI(0x01),
				ie.NewPagingPolicyIndicator(1),
				ie.NewAveragingWindow(0xffffffff),
				ie.NewQERControlIndications(1, 1, 1),
			),
			[]byte{
				0x00, 0x0e, 0x00, 0x76,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x1c, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x19, 0x00, 0x01, 0x00,
				0x00, 0x1a, 0x00, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x1b, 0x00, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x00, 0x5e, 0x00, 0x07, 0x03, 0x00, 0x11, 0x22, 0x00, 0x33, 0x44,
				0x00, 0xc1, 0x00, 0x11,
				0x07,
				0x11, 0x11,
				0x22, 0x22,
				0x33, 0x33,
				0x44, 0x44,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x61, 0x00, 0x05, 0x03, 0x11, 0x22, 0x33, 0x44,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0x7b, 0x00, 0x01, 0x01,
				0x00, 0x9e, 0x00, 0x01, 0x01,
				0x00, 0x9d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xfb, 0x00, 0x01, 0x07,
			},
		}, {
			"RemovePDR",
			ie.NewRemovePDR(
				ie.NewPDRID(0xffff),
			),
			[]byte{
				0x00, 0x0f, 0x00, 0x06,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
			},
		}, {
			"RemoveFAR",
			ie.NewRemoveFAR(
				ie.NewFARID(0xffffffff),
			),
			[]byte{
				0x00, 0x10, 0x00, 0x08,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"RemoveURR",
			ie.NewRemoveURR(
				ie.NewURRID(0xffffffff),
			),
			[]byte{
				0x00, 0x11, 0x00, 0x08,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"RemoveQER",
			ie.NewRemoveQER(
				ie.NewQERID(0xffffffff),
			),
			[]byte{
				0x00, 0x12, 0x00, 0x08,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"Cause",
			ie.NewCause(ie.CauseRequestAccepted),
			[]byte{0x00, 0x13, 0x00, 0x01, 0x01},
		}, {
			"SourceInterface",
			ie.NewSourceInterface(ie.SrcInterfaceAccess),
			[]byte{0x00, 0x14, 0x00, 0x01, 0x00},
		}, {
			"FTEID/TEID/IPv4",
			ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
			[]byte{0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"FTEID/TEID/IPv6",
			ie.NewFTEID(0x02, 0x11111111, nil, net.ParseIP("2001::1"), 0),
			[]byte{0x00, 0x15, 0x00, 0x15, 0x02, 0x11, 0x11, 0x11, 0x11, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"FTEID/TEID/IPv4v6",
			ie.NewFTEID(0x03, 0x11111111, net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), 0),
			[]byte{0x00, 0x15, 0x00, 0x19, 0x03, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"FTEID/TEID/CH",
			ie.NewFTEID(0x04, 0, nil, nil, 0),
			[]byte{0x00, 0x15, 0x00, 0x01, 0x04},
		}, {
			"FTEID/TEID/CH/CHID",
			ie.NewFTEID(0x0c, 0, nil, nil, 255),
			[]byte{0x00, 0x15, 0x00, 0x02, 0x0c, 0xff},
		}, {
			"NetworkInstance/string",
			ie.NewNetworkInstance("some.instance.example"),
			[]byte{0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65},
		}, {
			"NetworkInstance/FQDN",
			ie.NewNetworkInstanceFQDN("some.instance.example"),
			[]byte{
				0x00, 0x16, 0x00, 0x16,
				0x04, 0x73, 0x6f, 0x6d, 0x65, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"SDFFilter",
			ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
			[]byte{
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
			},
		}, {
			"ApplicationID",
			ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
			[]byte{0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f},
		}, {
			"GateStatus/OpenOpen",
			ie.NewGateStatus(ie.GateStatusOpen, ie.GateStatusOpen),
			[]byte{0x00, 0x19, 0x00, 0x01, 0x00},
		}, {
			"GateStatus/OpenClosed",
			ie.NewGateStatus(ie.GateStatusOpen, ie.GateStatusClosed),
			[]byte{0x00, 0x19, 0x00, 0x01, 0x01},
		}, {
			"GateStatus/ClosedOpen",
			ie.NewGateStatus(ie.GateStatusClosed, ie.GateStatusOpen),
			[]byte{0x00, 0x19, 0x00, 0x01, 0x04},
		}, {
			"GateStatus/ClosedClosed",
			ie.NewGateStatus(ie.GateStatusClosed, ie.GateStatusClosed),
			[]byte{0x00, 0x19, 0x00, 0x01, 0x05},
		}, {
			"MBR",
			ie.NewMBR(0x1111111111, 0x2222222222),
			[]byte{0x00, 0x1a, 0x00, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"GBR",
			ie.NewGBR(0x1111111111, 0x2222222222),
			[]byte{0x00, 0x1b, 0x00, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"QERCorrelationID",
			ie.NewQERCorrelationID(0x11111111),
			[]byte{0x00, 0x1c, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11},
		}, {
			"Precedence",
			ie.NewPrecedence(0x11111111),
			[]byte{0x00, 0x1d, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11},
		}, {
			"TransportLevelMarking",
			ie.NewTransportLevelMarking(0x1111),
			[]byte{0x00, 0x1e, 0x00, 0x02, 0x11, 0x11},
		}, {
			"VolumeThreshold/TOTAL",
			ie.NewVolumeThreshold(0x01, 0x1111111111111111, 0, 0),
			[]byte{0x00, 0x1f, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11},
		}, {
			"VolumeThreshold/ULDL",
			ie.NewVolumeThreshold(0x06, 0, 0x1111111111111111, 0x2222222222222222),
			[]byte{0x00, 0x1f, 0x00, 0x11, 0x06, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"VolumeThreshold/ALL",
			ie.NewVolumeThreshold(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
			[]byte{0x00, 0x1f, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"TimeThreshold",
			ie.NewTimeThreshold(10 * time.Second),
			[]byte{0x00, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"MonitoringTime",
			ie.NewMonitoringTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x21, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"SubsequentVolumeThreshold/TOTAL",
			ie.NewSubsequentVolumeThreshold(0x01, 0x1111111111111111, 0, 0),
			[]byte{0x00, 0x22, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11},
		}, {
			"SubsequentVolumeThreshold/ULDL",
			ie.NewSubsequentVolumeThreshold(0x06, 0, 0x1111111111111111, 0x2222222222222222),
			[]byte{0x00, 0x22, 0x00, 0x11, 0x06, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"SubsequentVolumeThreshold/ALL",
			ie.NewSubsequentVolumeThreshold(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
			[]byte{0x00, 0x22, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"SubsequentTimeThreshold",
			ie.NewSubsequentTimeThreshold(10 * time.Second),
			[]byte{0x00, 0x23, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"InactivityDetectionTime",
			ie.NewInactivityDetectionTime(0x11111111),
			[]byte{0x00, 0x24, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11},
		}, {
			"ReportingTriggers",
			ie.NewReportingTriggers(0x11, 0x22, 0x00),
			[]byte{0x00, 0x25, 0x00, 0x03, 0x11, 0x22, 0x00},
		}, {
			"RedirectInformation/URL/1",
			ie.NewRedirectInformation(ie.RedirectAddrURL, "https://github.com/wmnsk/go-pfcp/"),
			[]byte{0x00, 0x26, 0x00, 0x26, 0x02, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f, 0x00, 0x00},
		}, {
			"RedirectInformation/URL/2",
			ie.NewRedirectInformation(ie.RedirectAddrURL, "https://github.com/wmnsk/go-pfcp/", "https://github.com/wmnsk/go-pfcp/"),
			[]byte{
				0x00, 0x26, 0x00, 0x47, 0x02,
				0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
			},
		}, {
			"RedirectInformation/IPv4IPv6",
			ie.NewRedirectInformation(ie.RedirectAddrIPv4AndIPv6, "127.0.0.1", "2001::1"),
			[]byte{0x00, 0x26, 0x00, 0x15, 0x04, 0x00, 0x09, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x00, 0x07, 0x32, 0x30, 0x30, 0x31, 0x3a, 0x3a, 0x31},
		}, {
			"ReportType",
			ie.NewReportType(1, 1, 1, 1),
			[]byte{0x00, 0x27, 0x00, 0x01, 0x0f},
		}, {
			"OffendingIE",
			ie.NewOffendingIE(ie.Cause),
			[]byte{0x00, 0x28, 0x00, 0x02, 0x00, 0x13},
		}, {
			"ForwardingPolicy",
			ie.NewForwardingPolicy("go-pfcp"),
			[]byte{0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"DestinationInterface",
			ie.NewDestinationInterface(ie.DstInterfaceAccess),
			[]byte{0x00, 0x2a, 0x00, 0x01, 0x00},
		}, {
			"UPFunctionFeatures/Normal",
			ie.NewUPFunctionFeatures(0x01, 0x02),
			[]byte{0x00, 0x2b, 0x00, 0x02, 0x01, 0x02},
		}, {
			"UPFunctionFeatures/HasAdditional",
			ie.NewUPFunctionFeatures(0x01, 0x02, 0x03, 0x04),
			[]byte{0x00, 0x2b, 0x00, 0x04, 0x01, 0x02, 0x03, 0x04},
		}, {
			"ApplyAction",
			ie.NewApplyAction(0x04),
			[]byte{0x00, 0x2c, 0x00, 0x01, 0x04},
		}, {
			"ApplyAction",
			ie.NewApplyAction(0x04, 0x00),
			[]byte{0x00, 0x2c, 0x00, 0x02, 0x04, 0x00},
		}, {
			"DownlinkDataServiceInformation/HasPPI",
			ie.NewDownlinkDataServiceInformation(true, false, 0xff, 0),
			[]byte{0x00, 0x2d, 0x00, 0x02, 0x01, 0xff},
		}, {
			"DownlinkDataServiceInformation/HasQFI",
			ie.NewDownlinkDataServiceInformation(false, true, 0, 0xff),
			[]byte{0x00, 0x2d, 0x00, 0x02, 0x02, 0xff},
		}, {
			"DownlinkDataServiceInformation/HasALL",
			ie.NewDownlinkDataServiceInformation(true, true, 0xff, 0xff),
			[]byte{0x00, 0x2d, 0x00, 0x03, 0x03, 0xff, 0xff},
		}, {
			"DownlinkDataNotificationDelay",
			ie.NewDownlinkDataNotificationDelay(100 * time.Millisecond),
			[]byte{0x00, 0x2e, 0x00, 0x01, 0x02},
		}, {
			"DLBufferingDuration/20hr",
			ie.NewDLBufferingDuration(20 * time.Hour),
			[]byte{0x00, 0x2f, 0x00, 0x01, 0x82},
		}, {
			"DLBufferingDuration/30sec",
			ie.NewDLBufferingDuration(30 * time.Second),
			[]byte{0x00, 0x2f, 0x00, 0x01, 0x0f},
		}, {
			"DLBufferingDuration/15min",
			ie.NewDLBufferingDuration(15 * time.Minute),
			[]byte{0x00, 0x2f, 0x00, 0x01, 0x2f},
		}, {
			"DLBufferingSuggestedPacketCount/uint8",
			ie.NewDLBufferingSuggestedPacketCount(0xff),
			[]byte{0x00, 0x30, 0x00, 0x01, 0xff},
		}, {
			"DLBufferingSuggestedPacketCount/uint16",
			ie.NewDLBufferingSuggestedPacketCount(0xffff),
			[]byte{0x00, 0x30, 0x00, 0x02, 0xff, 0xff},
		}, {
			"PFCPSMReqFlags",
			ie.NewPFCPSMReqFlags(0x03),
			[]byte{0x00, 0x31, 0x00, 0x01, 0x03},
		}, {
			"PFCPSRRspFlags",
			ie.NewPFCPSRRspFlags(0x01),
			[]byte{0x00, 0x32, 0x00, 0x01, 0x01},
		}, {
			"LoadControlInformation",
			ie.NewLoadControlInformation(ie.NewSequenceNumber(0xffffffff), ie.NewMetric(0x01)),
			[]byte{0x00, 0x33, 0x00, 0x0d, 0x00, 0x34, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff, 0x00, 0x35, 0x00, 0x01, 0x01},
		}, {
			"SequenceNumber",
			ie.NewSequenceNumber(0xffffffff),
			[]byte{0x00, 0x34, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"Metric",
			ie.NewMetric(0x01),
			[]byte{0x00, 0x35, 0x00, 0x01, 0x01},
		}, {
			"OverloadControlInformation",
			ie.NewOverloadControlInformation(
				ie.NewSequenceNumber(0xffffffff),
				ie.NewMetric(0x01),
				ie.NewTimer(20*time.Hour),
				ie.NewOCIFlags(0x01),
			),
			[]byte{
				0x00, 0x36, 0x00, 0x17,
				0x00, 0x34, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x35, 0x00, 0x01, 0x01,
				0x00, 0x37, 0x00, 0x01, 0x82,
				0x00, 0x6e, 0x00, 0x01, 0x01,
			},
		}, {
			"Timer/20hr",
			ie.NewTimer(20 * time.Hour),
			[]byte{0x00, 0x37, 0x00, 0x01, 0x82},
		}, {
			"Timer/30sec",
			ie.NewTimer(30 * time.Second),
			[]byte{0x00, 0x37, 0x00, 0x01, 0x0f},
		}, {
			"Timer/15min",
			ie.NewTimer(15 * time.Minute),
			[]byte{0x00, 0x37, 0x00, 0x01, 0x2f},
		}, {
			"PDRID",
			ie.NewPDRID(0xffff),
			[]byte{0x00, 0x38, 0x00, 0x02, 0xff, 0xff},
		}, {
			"FSEID/SEID/IPv4",
			ie.NewFSEID(0x1111111122222222, net.ParseIP("127.0.0.1"), nil),
			[]byte{0x00, 0x39, 0x00, 0x0d, 0x02, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"FSEID/SEID/IPv6",
			ie.NewFSEID(0x1111111122222222, nil, net.ParseIP("2001::1")),
			[]byte{0x00, 0x39, 0x00, 0x19, 0x01, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"FSEID/SEID/IPv4v6",
			ie.NewFSEID(0x1111111122222222, net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{0x00, 0x39, 0x00, 0x1d, 0x03, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x7f, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"ApplicationIDsPFDs",
			ie.NewApplicationIDsPFDs(
				ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
				ie.NewPFDContext(
					ie.NewPFDContents("aa", "bb", "cc", "dd", "ee", []string{"11", "22"}, []string{"33", "44"}, []string{"55", "66"}),
				),
			),
			[]byte{
				0x00, 0x3a, 0x00, 0x61,
				// ApplicationID
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				// PFDContext
				0x00, 0x3b, 0x00, 0x38,
				0x00, 0x3d, 0x00, 0x34,
				0xff, 0x00, // Flags & Spare octet
				0x00, 0x02, 0x61, 0x61, // FD
				0x00, 0x02, 0x62, 0x62, // URL
				0x00, 0x02, 0x63, 0x63, // DN
				0x00, 0x02, 0x64, 0x64, // CP
				0x00, 0x02, 0x65, 0x65, // DNP
				0x00, 0x08, 0x00, 0x02, 0x31, 0x31, 0x00, 0x02, 0x32, 0x32, // AFD
				0x00, 0x08, 0x00, 0x02, 0x33, 0x33, 0x00, 0x02, 0x34, 0x34, // AURL
				0x00, 0x08, 0x00, 0x02, 0x35, 0x35, 0x00, 0x02, 0x36, 0x36, // ADNP
			},
		}, {
			"PFDContext",
			ie.NewPFDContext(
				ie.NewPFDContents("aa", "bb", "cc", "dd", "ee", []string{"11", "22"}, []string{"33", "44"}, []string{"55", "66"}),
			),
			[]byte{
				0x00, 0x3b, 0x00, 0x38,
				0x00, 0x3d, 0x00, 0x34,
				0xff, 0x00, // Flags & Spare octet
				0x00, 0x02, 0x61, 0x61, // FD
				0x00, 0x02, 0x62, 0x62, // URL
				0x00, 0x02, 0x63, 0x63, // DN
				0x00, 0x02, 0x64, 0x64, // CP
				0x00, 0x02, 0x65, 0x65, // DNP
				0x00, 0x08, 0x00, 0x02, 0x31, 0x31, 0x00, 0x02, 0x32, 0x32, // AFD
				0x00, 0x08, 0x00, 0x02, 0x33, 0x33, 0x00, 0x02, 0x34, 0x34, // AURL
				0x00, 0x08, 0x00, 0x02, 0x35, 0x35, 0x00, 0x02, 0x36, 0x36, // ADNP
			},
		}, {
			"PFDContext/MultiContents",
			ie.NewPFDContext(
				ie.NewPFDContents("aa", "bb", "cc", "dd", "ee", []string{"11", "22"}, []string{"33", "44"}, []string{"55", "66"}),
				ie.NewPFDContents("aa", "bb", "cc", "dd", "ee", []string{"11", "22"}, []string{"33", "44"}, []string{"55", "66"}),
			),
			[]byte{
				0x00, 0x3b, 0x00, 0x70,
				0x00, 0x3d, 0x00, 0x34,
				0xff, 0x00, // Flags & Spare octet
				0x00, 0x02, 0x61, 0x61, // FD
				0x00, 0x02, 0x62, 0x62, // URL
				0x00, 0x02, 0x63, 0x63, // DN
				0x00, 0x02, 0x64, 0x64, // CP
				0x00, 0x02, 0x65, 0x65, // DNP
				0x00, 0x08, 0x00, 0x02, 0x31, 0x31, 0x00, 0x02, 0x32, 0x32, // AFD
				0x00, 0x08, 0x00, 0x02, 0x33, 0x33, 0x00, 0x02, 0x34, 0x34, // AURL
				0x00, 0x08, 0x00, 0x02, 0x35, 0x35, 0x00, 0x02, 0x36, 0x36, // ADNP
				0x00, 0x3d, 0x00, 0x34,
				0xff, 0x00, // Flags & Spare octet
				0x00, 0x02, 0x61, 0x61, // FD
				0x00, 0x02, 0x62, 0x62, // URL
				0x00, 0x02, 0x63, 0x63, // DN
				0x00, 0x02, 0x64, 0x64, // CP
				0x00, 0x02, 0x65, 0x65, // DNP
				0x00, 0x08, 0x00, 0x02, 0x31, 0x31, 0x00, 0x02, 0x32, 0x32, // AFD
				0x00, 0x08, 0x00, 0x02, 0x33, 0x33, 0x00, 0x02, 0x34, 0x34, // AURL
				0x00, 0x08, 0x00, 0x02, 0x35, 0x35, 0x00, 0x02, 0x36, 0x36, // ADNP
			},
		}, {
			"NodeID/IPv4", // TODO: add IPv6
			ie.NewNodeID("127.0.0.1", "", ""),
			[]byte{0x00, 0x3c, 0x00, 0x05, 0x00, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"NodeID/FQDN", // TODO: add IPv6
			ie.NewNodeID("", "", "go-pfcp.epc.3gppnetwork.org"),
			[]byte{0x00, 0x3c, 0x00, 0x1d, 0x02, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x03, 0x65, 0x70, 0x63, 0x0b, 0x33, 0x67, 0x70, 0x70, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x03, 0x6f, 0x72, 0x67},
		}, {
			"NodeIDHeuristic/IPv4", // TODO: add IPv6
			ie.NewNodeIDHeuristic("127.0.0.1"),
			[]byte{0x00, 0x3c, 0x00, 0x05, 0x00, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"NodeIDHeuristic/FQDN", // TODO: add IPv6
			ie.NewNodeIDHeuristic("go-pfcp.epc.3gppnetwork.org"),
			[]byte{0x00, 0x3c, 0x00, 0x1d, 0x02, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x03, 0x65, 0x70, 0x63, 0x0b, 0x33, 0x67, 0x70, 0x70, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x03, 0x6f, 0x72, 0x67},
		}, {
			"PFDContents",
			ie.NewPFDContents("aa", "bb", "cc", "dd", "ee", []string{"11", "22"}, []string{"33", "44"}, []string{"55", "66"}),
			[]byte{
				0x00, 0x3d, 0x00, 0x34,
				0xff, 0x00, // Flags & Spare octet
				0x00, 0x02, 0x61, 0x61, // FD
				0x00, 0x02, 0x62, 0x62, // URL
				0x00, 0x02, 0x63, 0x63, // DN
				0x00, 0x02, 0x64, 0x64, // CP
				0x00, 0x02, 0x65, 0x65, // DNP
				0x00, 0x08, 0x00, 0x02, 0x31, 0x31, 0x00, 0x02, 0x32, 0x32, // AFD
				0x00, 0x08, 0x00, 0x02, 0x33, 0x33, 0x00, 0x02, 0x34, 0x34, // AURL
				0x00, 0x08, 0x00, 0x02, 0x35, 0x35, 0x00, 0x02, 0x36, 0x36, // ADNP
			},
		}, {
			"MeasurementMethod",
			ie.NewMeasurementMethod(1, 1, 1),
			[]byte{0x00, 0x3e, 0x00, 0x01, 0x07},
		}, {
			"UsageReportTrigger",
			ie.NewUsageReportTrigger(0xff, 0xff, 0xff),
			[]byte{0x00, 0x3f, 0x00, 0x03, 0xff, 0xff, 0xff},
		}, {
			"MeasurementPeriod",
			ie.NewMeasurementPeriod(10 * time.Second),
			[]byte{0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"FQCSID/IPv4/SingleCSID",
			ie.NewFQCSID("127.0.0.1", 1),
			[]byte{0x00, 0x41, 0x00, 0x07, 0x01, 0x7f, 0x00, 0x00, 0x01, 0x00, 0x01},
		}, {
			"FQCSID/IPv4/MultiCSIDs",
			ie.NewFQCSID("127.0.0.1", 1, 2),
			[]byte{0x00, 0x41, 0x00, 0x09, 0x02, 0x7f, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02},
		}, {
			"FQCSID/IPv6/SingleCSID",
			ie.NewFQCSID("2001::1", 1),
			[]byte{0x00, 0x41, 0x00, 0x13, 0x11, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01},
		}, {
			"FQCSID/other",
			ie.NewFQCSID("12304501", 1),
			[]byte{0x00, 0x41, 0x00, 0x07, 0x21, 0x12, 0x30, 0x45, 0x01, 0x00, 0x01},
		}, {
			"VolumeMeasurement/All",
			ie.NewVolumeMeasurement(0x3f, 0x1111111111111111, 0x2222222222222222, 0x3333333333333333, 0x4444444444444444, 0x5555555555555555, 0x6666666666666666),
			[]byte{
				0x00, 0x42, 0x00, 0x31,
				0x3f,
				0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
				0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
				0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
				0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
			},
		}, {
			"DurationMeasurement",
			ie.NewDurationMeasurement(10 * time.Second),
			[]byte{0x00, 0x43, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"ApplicationDetectionInformation",
			ie.NewApplicationDetectionInformation(
				ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
				ie.NewApplicationInstanceID("go-pfcp"),
				ie.NewFlowInformation(ie.FlowDirectionDownlink, "go-pfcp"),
				ie.NewPDRID(0xffff),
			),
			[]byte{
				0x00, 0x44, 0x00, 0x44,
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x5b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x5c, 0x00, 0x0a, 0x01, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
			},
		}, {
			"TimeOfFirstPacket",
			ie.NewTimeOfFirstPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x45, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"TimeOfLastPacket",
			ie.NewTimeOfLastPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x46, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"QuotaHoldingTime",
			ie.NewQuotaHoldingTime(10 * time.Second),
			[]byte{0x00, 0x47, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"DroppedDLTrafficThreshold/Packets",
			ie.NewDroppedDLTrafficThreshold(true, false, 0xffffffffffffffff, 0),
			[]byte{0x00, 0x48, 0x00, 0x09, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"DroppedDLTrafficThreshold/Bytes",
			ie.NewDroppedDLTrafficThreshold(false, true, 0, 0xffffffffffffffff),
			[]byte{0x00, 0x48, 0x00, 0x09, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"DroppedDLTrafficThreshold/Both",
			ie.NewDroppedDLTrafficThreshold(true, true, 0xffffffffffffffff, 0xffffffffffffffff),
			[]byte{0x00, 0x48, 0x00, 0x11, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"VolumeQuota/Total",
			ie.NewVolumeQuota(0x01, 0xffffffffffffffff, 0, 0),
			[]byte{0x00, 0x49, 0x00, 0x09, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"VolumeQuota/UL",
			ie.NewVolumeQuota(0x02, 0, 0xffffffffffffffff, 0),
			[]byte{0x00, 0x49, 0x00, 0x09, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"VolumeQuota/DL",
			ie.NewVolumeQuota(0x04, 0, 0, 0xffffffffffffffff),
			[]byte{0x00, 0x49, 0x00, 0x09, 0x04, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"VolumeQuota/ALL",
			ie.NewVolumeQuota(0x07, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff),
			[]byte{0x00, 0x49, 0x00, 0x19, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
		}, {
			"TimeQuota",
			ie.NewTimeQuota(10 * time.Second),
			[]byte{0x00, 0x4a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"StartTime",
			ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"EndTime",
			ie.NewEndTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x4c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"QueryURR",
			ie.NewQueryURR(
				ie.NewURRID(0xffffffff),
			),
			[]byte{
				0x00, 0x4d, 0x00, 0x08,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"UsageReportWithinSessionModificationResponse",
			ie.NewUsageReportWithinSessionModificationResponse(
				ie.NewURRID(0xffffffff),
				ie.NewURSEQN(0xffffffff),
				ie.NewUsageReportTrigger(0xff, 0xff, 0xff),
				ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewEndTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewVolumeMeasurement(0x3f, 0x1111111111111111, 0x2222222222222222, 0x3333333333333333, 0x4444444444444444, 0x5555555555555555, 0x6666666666666666),
				ie.NewDurationMeasurement(10*time.Second),
				ie.NewTimeOfFirstPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewTimeOfLastPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewUsageInformation(1, 1, 1, 1),
				ie.NewQueryURRReference(0xffffffff),
				ie.NewEthernetTrafficInformation(
					ie.NewMACAddressesDetected(
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						mac1, mac2, mac3, mac4,
					),
					ie.NewMACAddressesRemoved(
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						mac1, mac2, mac3, mac4,
					),
				),
			),
			[]byte{
				0x00, 0x4e, 0x00, 0xcf,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x68, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x3f, 0x00, 0x03, 0xff, 0xff, 0xff,
				0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x4c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x42, 0x00, 0x31,
				0x3f,
				0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
				0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
				0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
				0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
				0x00, 0x43, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x45, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x46, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x5a, 0x00, 0x01, 0x0f,
				0x00, 0x7d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x8f, 0x00, 0x4a,
				0x00, 0x90, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
				0x00, 0x91, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
			},
		}, {
			"UsageReportWithinSessionDeletionResponse",
			ie.NewUsageReportWithinSessionDeletionResponse(
				ie.NewURRID(0xffffffff),
				ie.NewURSEQN(0xffffffff),
				ie.NewUsageReportTrigger(0xff, 0xff, 0xff),
				ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewEndTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewVolumeMeasurement(0x3f, 0x1111111111111111, 0x2222222222222222, 0x3333333333333333, 0x4444444444444444, 0x5555555555555555, 0x6666666666666666),
				ie.NewDurationMeasurement(10*time.Second),
				ie.NewTimeOfFirstPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewTimeOfLastPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewUsageInformation(1, 1, 1, 1),
				ie.NewEthernetTrafficInformation(
					ie.NewMACAddressesDetected(
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						mac1, mac2, mac3, mac4,
					),
					ie.NewMACAddressesRemoved(
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						mac1, mac2, mac3, mac4,
					),
				),
			),
			[]byte{
				0x00, 0x4f, 0x00, 0xc7,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x68, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x3f, 0x00, 0x03, 0xff, 0xff, 0xff,
				0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x4c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x42, 0x00, 0x31,
				0x3f,
				0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
				0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
				0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
				0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
				0x00, 0x43, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x45, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x46, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x5a, 0x00, 0x01, 0x0f,
				0x00, 0x8f, 0x00, 0x4a,
				0x00, 0x90, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
				0x00, 0x91, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
			},
		}, {
			"UsageReportWithinSessionReportRequest",
			ie.NewUsageReportWithinSessionReportRequest(
				ie.NewURRID(0xffffffff),
				ie.NewURSEQN(0xffffffff),
				ie.NewUsageReportTrigger(0xff, 0xff, 0xff),
				ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewEndTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewVolumeMeasurement(0x3f, 0x1111111111111111, 0x2222222222222222, 0x3333333333333333, 0x4444444444444444, 0x5555555555555555, 0x6666666666666666),
				ie.NewDurationMeasurement(10*time.Second),
				ie.NewApplicationDetectionInformation(
					ie.NewApplicationID("https://github.com/wmnsk/go-pfcp/"),
					ie.NewApplicationInstanceID("go-pfcp"),
					ie.NewFlowInformation(ie.FlowDirectionDownlink, "go-pfcp"),
					ie.NewPDRID(0xffff),
				),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
				ie.NewTimeOfFirstPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewTimeOfLastPacket(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewUsageInformation(1, 1, 1, 1),
				ie.NewQueryURRReference(0xffffffff),
				ie.NewEventTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewEthernetTrafficInformation(
					ie.NewMACAddressesDetected(
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						mac1, mac2, mac3, mac4,
					),
					ie.NewMACAddressesRemoved(
						ie.NewCTAG(0x07, 1, 1, 4095),
						ie.NewSTAG(0x07, 1, 1, 4095),
						mac1, mac2, mac3, mac4,
					),
				),
				ie.NewJoinIPMulticastInformationWithinUsageReport(
					ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
					ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
				),
				ie.NewLeaveIPMulticastInformationWithinUsageReport(
					ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
					ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
				),
			),
			[]byte{
				0x00, 0x50, 0x01, 0x5e,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x68, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x3f, 0x00, 0x03, 0xff, 0xff, 0xff,
				0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x4c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x42, 0x00, 0x31,
				0x3f,
				0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
				0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
				0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
				0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
				0x00, 0x43, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x44, 0x00, 0x44,
				0x00, 0x18, 0x00, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6d, 0x6e, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x2f,
				0x00, 0x5b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x5c, 0x00, 0x0a, 0x01, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x45, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x46, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x5a, 0x00, 0x01, 0x0f,
				0x00, 0x7d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x9c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x8f, 0x00, 0x4a,
				0x00, 0x90, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
				0x00, 0x91, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
				0x00, 0xbd, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
				0x00, 0xbe, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
			},
		}, {
			"URRID",
			ie.NewURRID(0xffffffff),
			[]byte{0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"LinkedURRID",
			ie.NewLinkedURRID(0xffffffff),
			[]byte{0x00, 0x52, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"DownlinkDataReport",
			ie.NewDownlinkDataReport(
				ie.NewPDRID(0xffff),
				ie.NewDownlinkDataServiceInformation(true, true, 0xff, 0xff),
				ie.NewDLDataPacketsSize(0xffff),
				ie.NewDataStatus(0x03),
			),
			[]byte{
				0x00, 0x53, 0x00, 0x18,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x2d, 0x00, 0x03, 0x03, 0xff, 0xff,
				0x00, 0xfa, 0x00, 0x02, 0xff, 0xff,
				0x01, 0x04, 0x00, 0x01, 0x03,
			},
		}, {
			"OuterHeaderCreation/TEID/IPv4", // TODO: add other types
			ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
			[]byte{0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"OuterHeaderCreation/IPv4/Port", // TODO: add other types
			ie.NewOuterHeaderCreation(0x0400, 0, "127.0.0.1", "", 2152, 0, 0),
			[]byte{0x00, 0x54, 0x00, 0x08, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x01, 0x08, 0x68},
		}, {
			"OuterHeaderCreation/IPv4", // TODO: add other types
			ie.NewOuterHeaderCreation(0x1000, 0, "127.0.0.1", "", 0, 0, 0),
			[]byte{0x00, 0x54, 0x00, 0x06, 0x10, 0x00, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"CreateBAR",
			ie.NewCreateBAR(
				ie.NewBARID(0xff),
				ie.NewDownlinkDataNotificationDelay(100*time.Millisecond),
				ie.NewSuggestedBufferingPacketsCount(0x01),
				ie.NewMTEDTControlInformation(1),
			),
			[]byte{
				0x00, 0x55, 0x00, 0x14,
				0x00, 0x58, 0x00, 0x01, 0xff,
				0x00, 0x2e, 0x00, 0x01, 0x02,
				0x00, 0x8c, 0x00, 0x01, 0x01,
				0x00, 0xf9, 0x00, 0x01, 0x01,
			},
		}, {
			"UpdateBARWithinSessionModificationRequest",
			ie.NewUpdateBARWithinSessionModificationRequest(
				ie.NewBARID(0xff),
				ie.NewDownlinkDataNotificationDelay(100*time.Millisecond),
				ie.NewSuggestedBufferingPacketsCount(0x01),
				ie.NewMTEDTControlInformation(1),
			),
			[]byte{
				0x00, 0x56, 0x00, 0x14,
				0x00, 0x58, 0x00, 0x01, 0xff,
				0x00, 0x2e, 0x00, 0x01, 0x02,
				0x00, 0x8c, 0x00, 0x01, 0x01,
				0x00, 0xf9, 0x00, 0x01, 0x01,
			},
		}, {
			"RemoveBAR",
			ie.NewRemoveBAR(
				ie.NewBARID(0xff),
			),
			[]byte{
				0x00, 0x57, 0x00, 0x05,
				0x00, 0x58, 0x00, 0x01, 0xff,
			},
		}, {
			"BARID",
			ie.NewBARID(0xff),
			[]byte{0x00, 0x58, 0x00, 0x01, 0xff},
		}, {
			"CPFunctionFeatures",
			ie.NewCPFunctionFeatures(0x3f),
			[]byte{0x00, 0x59, 0x00, 0x01, 0x3f},
		}, {
			"UsageInformation",
			ie.NewUsageInformation(1, 1, 1, 1),
			[]byte{0x00, 0x5a, 0x00, 0x01, 0x0f},
		}, {
			"ApplicationInstanceID",
			ie.NewApplicationInstanceID("go-pfcp"),
			[]byte{0x00, 0x5b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"FlowInformation",
			ie.NewFlowInformation(ie.FlowDirectionDownlink, "go-pfcp"),
			[]byte{0x00, 0x5c, 0x00, 0x0a, 0x01, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"UEIPAddress/IPv4",
			ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
			[]byte{0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"UEIPAddress/CHV4",
			ie.NewUEIPAddress(0x10, "", "", 0, 0),
			[]byte{0x00, 0x5d, 0x00, 0x01, 0x10},
		}, {
			"UEIPAddress/IPv6",
			ie.NewUEIPAddress(0x09, "", "2001::1", 4, 0),
			[]byte{0x00, 0x5d, 0x00, 0x12, 0x09, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04},
		}, {
			"UEIPAddress/IPv6/PL",
			ie.NewUEIPAddress(0x49, "", "2001::1", 4, 60),
			[]byte{0x00, 0x5d, 0x00, 0x13, 0x49, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x3c},
		}, {
			"UEIPAddress/CHV6",
			ie.NewUEIPAddress(0x20, "", "", 0, 0),
			[]byte{0x00, 0x5d, 0x00, 0x01, 0x20},
		}, {
			"UEIPAddress/CHV6/PL",
			ie.NewUEIPAddress(0x60, "", "", 0, 60),
			[]byte{0x00, 0x5d, 0x00, 0x02, 0x60, 0x3c},
		}, {
			"PacketRate/Both", // TODO: add other types
			ie.NewPacketRate(0x03, ie.TimeUnitMinute, 0x1122, ie.TimeUnitMinute, 0x3344),
			[]byte{0x00, 0x5e, 0x00, 0x07, 0x03, 0x00, 0x11, 0x22, 0x00, 0x33, 0x44},
		}, {
			"OuterHeaderRemoval",
			ie.NewOuterHeaderRemoval(0x01, 0x02),
			[]byte{0x00, 0x5f, 0x00, 0x02, 0x01, 0x02},
		}, {
			"RecoveryTimeStamp",
			ie.NewRecoveryTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x60, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"DLFlowLevelMarking",
			ie.NewDLFlowLevelMarking(0x03, 0x1122, 0x3344),
			[]byte{0x00, 0x61, 0x00, 0x05, 0x03, 0x11, 0x22, 0x33, 0x44},
		}, {
			"HeaderEnrichment",
			ie.NewHeaderEnrichment(ie.HeaderTypeHTTP, "name", "value"),
			[]byte{0x00, 0x62, 0x00, 0x0c, 0x00, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65},
		}, {
			"ErrorIndicationReport",
			ie.NewErrorIndicationReport(
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
			),
			[]byte{
				0x00, 0x63, 0x00, 0x0d,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"MeasurementInformation",
			ie.NewMeasurementInformation(0x1f),
			[]byte{0x00, 0x64, 0x00, 0x01, 0x1f},
		}, {
			"NodeReportType",
			ie.NewNodeReportType(0x01),
			[]byte{0x00, 0x65, 0x00, 0x01, 0x01},
		}, {
			"UserPlanePathFailureReport",
			ie.NewUserPlanePathFailureReport(
				ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
			),
			[]byte{
				0x00, 0x66, 0x00, 0x23,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"RemoteGTPUPeer/IPv4/DI/NI", // TODO: add other types
			ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
			[]byte{
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"URSEQN",
			ie.NewURSEQN(0xffffffff),
			[]byte{0x00, 0x68, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"UpdateDuplicatingParameters",
			ie.NewUpdateDuplicatingParameters(
				ie.NewDestinationInterface(ie.DstInterfaceAccess),
				ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
				ie.NewTransportLevelMarking(0x1111),
				ie.NewForwardingPolicy("go-pfcp"),
			),
			[]byte{
				0x00, 0x69, 0x00, 0x25,
				0x00, 0x2a, 0x00, 0x01, 0x00,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x29, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"ActivatePredefinedRules",
			ie.NewActivatePredefinedRules("go-pfcp"),
			[]byte{0x00, 0x6a, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"DeactivatePredefinedRules",
			ie.NewDeactivatePredefinedRules("go-pfcp"),
			[]byte{0x00, 0x6b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"FARID",
			ie.NewFARID(0xffffffff),
			[]byte{0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"QERID",
			ie.NewQERID(0xffffffff),
			[]byte{0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"OCIFlags",
			ie.NewOCIFlags(0x01),
			[]byte{0x00, 0x6e, 0x00, 0x01, 0x01},
		}, {
			"PFCPAssociationReleaseRequest",
			ie.NewPFCPAssociationReleaseRequest(1, 1),
			[]byte{0x00, 0x6f, 0x00, 0x01, 0x03},
		}, {
			"GracefulReleasePeriod/20hr",
			ie.NewGracefulReleasePeriod(20 * time.Hour),
			[]byte{0x00, 0x70, 0x00, 0x01, 0x82},
		}, {
			"GracefulReleasePeriod/30sec",
			ie.NewGracefulReleasePeriod(30 * time.Second),
			[]byte{0x00, 0x70, 0x00, 0x01, 0x0f},
		}, {
			"GracefulReleasePeriod/15min",
			ie.NewGracefulReleasePeriod(15 * time.Minute),
			[]byte{0x00, 0x70, 0x00, 0x01, 0x2f},
		}, {
			"PDNType",
			ie.NewPDNType(ie.PDNTypeIPv4),
			[]byte{0x00, 0x71, 0x00, 0x01, 0x01},
		}, {
			"FailedRuleID/PDR",
			ie.NewFailedRuleID(ie.RuleIDTypePDR, 0xffff),
			[]byte{0x00, 0x72, 0x00, 0x03, 0x00, 0xff, 0xff},
		}, {
			"FailedRuleID/FAR",
			ie.NewFailedRuleID(ie.RuleIDTypeFAR, 0xffffffff),
			[]byte{0x00, 0x72, 0x00, 0x05, 0x01, 0xff, 0xff, 0xff, 0xff},
		}, {
			"FailedRuleID/BAR",
			ie.NewFailedRuleID(ie.RuleIDTypeBAR, 0xff),
			[]byte{0x00, 0x72, 0x00, 0x02, 0x04, 0xff},
		}, {
			"TimeQuotaMechanism",
			ie.NewTimeQuotaMechanism(ie.BTITCTP, 10*time.Second),
			[]byte{0x00, 0x73, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"UserPlaneIPResourceInformation/IPv4/TEIDRange/NI/SI", // TODO: add other types
			ie.NewUserPlaneIPResourceInformation(0x71, 15, "127.0.0.1", "", "some.instance.example", ie.SrcInterfaceAccess),
			[]byte{
				0x00, 0x74, 0x00, 0x1c,
				0x71,
				0x0f,
				0x7f, 0x00, 0x00, 0x01,
				0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00,
			},
		}, {
			"UserPlaneInactivityTimer",
			ie.NewUserPlaneInactivityTimer(10 * time.Second),
			[]byte{0x00, 0x75, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"AggregatedURRs",
			ie.NewAggregatedURRs(
				ie.NewAggregatedURRID(0xffffffff),
				ie.NewMultiplier(0xffffffffffffffff, 0x11223344),
			),
			[]byte{
				0x00, 0x76, 0x00, 0x18,
				0x00, 0x78, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x77, 0x00, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x11, 0x22, 0x33, 0x44,
			},
		}, {
			"Multiplier",
			ie.NewMultiplier(0xffffffffffffffff, 0x11223344),
			[]byte{0x00, 0x77, 0x00, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x11, 0x22, 0x33, 0x44},
		}, {
			"AggregatedURRID",
			ie.NewAggregatedURRID(0xffffffff),
			[]byte{0x00, 0x78, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"SubsequentVolumeQuota/TOTAL",
			ie.NewSubsequentVolumeQuota(0x01, 0x1111111111111111, 0, 0),
			[]byte{0x00, 0x79, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11},
		}, {
			"SubsequentVolumeQuota/ULDL",
			ie.NewSubsequentVolumeQuota(0x06, 0, 0x1111111111111111, 0x2222222222222222),
			[]byte{0x00, 0x79, 0x00, 0x11, 0x06, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"SubsequentVolumeQuota/ALL",
			ie.NewSubsequentVolumeQuota(0x07, 0x3333333333333333, 0x1111111111111111, 0x2222222222222222),
			[]byte{0x00, 0x79, 0x00, 0x19, 0x07, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22},
		}, {
			"SubsequentTimeQuota",
			ie.NewSubsequentTimeQuota(10 * time.Second),
			[]byte{0x00, 0x7a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"RQI",
			ie.NewRQI(0x01),
			[]byte{0x00, 0x7b, 0x00, 0x01, 0x01},
		}, {
			"QFI",
			ie.NewQFI(0x01),
			[]byte{0x00, 0x7c, 0x00, 0x01, 0x01},
		}, {
			"QueryURRReference",
			ie.NewQueryURRReference(0xffffffff),
			[]byte{0x00, 0x7d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"AdditionalUsageReportsInformation",
			ie.NewAdditionalUsageReportsInformation(0x00ff),
			[]byte{0x00, 0x7e, 0x00, 0x02, 0x80, 0xff},
		}, {
			"CreateTrafficEndpoint",
			ie.NewCreateTrafficEndpoint(
				ie.NewTrafficEndpointID(0x01),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewRedundantTransmissionParametersInPDI(
					ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
				ie.NewEthernetPDUSessionInformation(0x01),
				ie.NewFramedRoute("go-pfcp"),
				ie.NewFramedRouting(ie.FramedRoutingNone),
				ie.NewFramedIPv6Route("go-pfcp"),
				ie.NewQFI(0x01),
			),
			[]byte{
				0x00, 0x7f, 0x00, 0x86,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x8e, 0x00, 0x01, 0x01,
				0x00, 0x99, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x9a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x9b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x7c, 0x00, 0x01, 0x01,
			},
		}, {
			"CreatedTrafficEndpoint",
			ie.NewCreatedTrafficEndpoint(
				ie.NewTrafficEndpointID(0x01),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
			),
			[]byte{
				0x00, 0x80, 0x00, 0x28,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"UpdateTrafficEndpoint",
			ie.NewUpdateTrafficEndpoint(
				ie.NewTrafficEndpointID(0x01),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewRedundantTransmissionParametersInPDI(
					ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
					ie.NewNetworkInstance("some.instance.example"),
				),
				ie.NewUEIPAddress(0x02, "127.0.0.1", "", 0, 0),
				ie.NewFramedRoute("go-pfcp"),
				ie.NewFramedRouting(ie.FramedRoutingNone),
				ie.NewFramedIPv6Route("go-pfcp"),
				ie.NewQFI(0x01),
			),
			[]byte{
				0x00, 0x81, 0x00, 0x81,
				0x00, 0x83, 0x00, 0x01, 0x01,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x5d, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x99, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x9a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x9b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x7c, 0x00, 0x01, 0x01,
			},
		}, {
			"RemoveTrafficEndpoint",
			ie.NewRemoveTrafficEndpoint(
				ie.NewTrafficEndpointID(0x01),
			),
			[]byte{
				0x00, 0x82, 0x00, 0x05,
				0x00, 0x83, 0x00, 0x01, 0x01,
			},
		}, {
			"TrafficEndpointID",
			ie.NewTrafficEndpointID(0x01),
			[]byte{0x00, 0x83, 0x00, 0x01, 0x01},
		}, {
			"EthernetPacketFilter",
			ie.NewEthernetPacketFilter(
				ie.NewEthernetFilterID(0xffffffff),
				ie.NewEthernetFilterProperties(0x01),
				ie.NewMACAddress(mac1, mac2, mac3, mac4),
				ie.NewEthertype(0xffff),
				ie.NewCTAG(0x07, 1, 1, 4095),
				ie.NewSTAG(0x07, 1, 1, 4095),
				ie.NewSDFFilter("aaaaaaaa", "bb", "cccc", "ddd", 0xffffffff),
			),
			[]byte{
				0x00, 0x84, 0x00, 0x5b,
				0x00, 0x8a, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x8b, 0x00, 0x01, 0x01,
				0x00, 0x85, 0x00, 0x19, 0x0f,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x03,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x00, 0x88, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x86, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x87, 0x00, 0x03, 0x07, 0xf9, 0xff,
				0x00, 0x17, 0x00, 0x19,
				0x1f, 0x00, // Flags & Spare octet
				0x00, 0x08, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, // FD
				0x62, 0x62, // TTC
				0x63, 0x63, 0x63, 0x63, // SPI
				0x64, 0x64, 0x64, // FL
				0xff, 0xff, 0xff, 0xff, // BID
			},
		}, {
			"MACAddress/All",
			ie.NewMACAddress(mac1, mac2, mac3, mac4),
			[]byte{
				0x00, 0x85, 0x00, 0x19, 0x0f,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x03,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
			},
		}, {
			"CTAG",
			ie.NewCTAG(0x07, 1, 1, 4095),
			[]byte{0x00, 0x86, 0x00, 0x03, 0x07, 0xf9, 0xff},
		}, {
			"STAG",
			ie.NewSTAG(0x07, 1, 1, 4095),
			[]byte{0x00, 0x87, 0x00, 0x03, 0x07, 0xf9, 0xff},
		}, {
			"Ethertype",
			ie.NewEthertype(0xffff),
			[]byte{0x00, 0x88, 0x00, 0x02, 0xff, 0xff},
		}, {
			"Proxying",
			ie.NewProxying(1, 1),
			[]byte{0x00, 0x89, 0x00, 0x01, 0x03},
		}, {
			"EthernetFilterID",
			ie.NewEthernetFilterID(0xffffffff),
			[]byte{0x00, 0x8a, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"EthernetFilterProperties",
			ie.NewEthernetFilterProperties(0x01),
			[]byte{0x00, 0x8b, 0x00, 0x01, 0x01},
		}, {
			"SuggestedBufferingPacketsCount",
			ie.NewSuggestedBufferingPacketsCount(0x01),
			[]byte{0x00, 0x8c, 0x00, 0x01, 0x01},
		}, {
			"UserID",
			ie.NewUserID(0x0f, "123451234567890", "123451234567890", "123451234567890", "go-pfcp@github.com"),
			[]byte{
				0x00, 0x8d, 0x00, 0x2f, 0x0f,
				0x08, 0x21, 0x43, 0x15, 0x32, 0x54, 0x76, 0x98, 0xf0,
				0x08, 0x21, 0x43, 0x15, 0x32, 0x54, 0x76, 0x98, 0xf0,
				0x08, 0x21, 0x43, 0x15, 0x32, 0x54, 0x76, 0x98, 0xf0,
				0x12, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
			},
		}, {
			"UserID/NoNAI",
			ie.NewUserID(0x07, "123451234567890", "123451234567890", "123451234567890", ""),
			[]byte{
				0x00, 0x8d, 0x00, 0x1c, 0x07,
				0x08, 0x21, 0x43, 0x15, 0x32, 0x54, 0x76, 0x98, 0xf0,
				0x08, 0x21, 0x43, 0x15, 0x32, 0x54, 0x76, 0x98, 0xf0,
				0x08, 0x21, 0x43, 0x15, 0x32, 0x54, 0x76, 0x98, 0xf0,
			},
		}, {
			"EthernetPDUSessionInformation",
			ie.NewEthernetPDUSessionInformation(0x01),
			[]byte{0x00, 0x8e, 0x00, 0x01, 0x01},
		}, {
			"EthernetTrafficInformation",
			ie.NewEthernetTrafficInformation(
				ie.NewMACAddressesDetected(
					ie.NewCTAG(0x07, 1, 1, 4095),
					ie.NewSTAG(0x07, 1, 1, 4095),
					mac1, mac2, mac3, mac4,
				),
				ie.NewMACAddressesRemoved(
					ie.NewCTAG(0x07, 1, 1, 4095),
					ie.NewSTAG(0x07, 1, 1, 4095),
					mac1, mac2, mac3, mac4,
				),
			),
			[]byte{
				0x00, 0x8f, 0x00, 0x4a,
				0x00, 0x90, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
				0x00, 0x91, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
			},
		}, {
			"EthernetInactivityTimer",
			ie.NewEthernetInactivityTimer(10 * time.Second),
			[]byte{0x00, 0x92, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"MACAddressDetected",
			ie.NewMACAddressesDetected(
				ie.NewCTAG(0x07, 1, 1, 4095),
				ie.NewSTAG(0x07, 1, 1, 4095),
				mac1, mac2, mac3, mac4,
			),
			[]byte{
				0x00, 0x90, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
			},
		}, {
			"MACAddressRemoved",
			ie.NewMACAddressesRemoved(
				ie.NewCTAG(0x07, 1, 1, 4095),
				ie.NewSTAG(0x07, 1, 1, 4095),
				mac1, mac2, mac3, mac4,
			),
			[]byte{
				0x00, 0x91, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
			},
		}, {
			"AdditionalMonitoringTime",
			ie.NewAdditionalMonitoringTime(
				ie.NewMonitoringTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewSubsequentVolumeThreshold(0x01, 0x1111111111111111, 0, 0),
				ie.NewSubsequentTimeThreshold(10*time.Second),
				ie.NewSubsequentVolumeQuota(0x01, 0x1111111111111111, 0, 0),
				ie.NewSubsequentTimeQuota(10*time.Second),
				ie.NewEventThreshold(0xffffffff),
				ie.NewEventQuota(0xffffffff),
			),
			[]byte{
				0x00, 0x93, 0x00, 0x42,
				0x00, 0x21, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x22, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x23, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x79, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
				0x00, 0x7a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x95, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x94, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"EventQuota",
			ie.NewEventQuota(0xffffffff),
			[]byte{0x00, 0x94, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"EventThreshold",
			ie.NewEventThreshold(0xffffffff),
			[]byte{0x00, 0x95, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"SubsequentEventQuota",
			ie.NewSubsequentEventQuota(0xffffffff),
			[]byte{0x00, 0x96, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"SubsequentEventThreshold",
			ie.NewSubsequentEventThreshold(0xffffffff),
			[]byte{0x00, 0x97, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"TraceInformation",
			ie.NewTraceInformation("001", "01", "123", []byte{0xde, 0xad, 0xbe, 0xef}, 0xff, []byte{0xde, 0xad, 0xbe, 0xef}, net.ParseIP("127.0.0.1")),
			[]byte{
				0x00, 0x98, 0x00, 0x16,
				0x00, 0xf1, 0x10, 0x31, 0x32, 0x33,
				0x04, 0xde, 0xad, 0xbe, 0xef,
				0xff,
				0x04, 0xde, 0xad, 0xbe, 0xef,
				0x04, 0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"FramedRoute",
			ie.NewFramedRoute("go-pfcp"),
			[]byte{0x00, 0x99, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"FramedRouting",
			ie.NewFramedRouting(ie.FramedRoutingNone),
			[]byte{0x00, 0x9a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00},
		}, {
			"FramedIPv6Route",
			ie.NewFramedIPv6Route("go-pfcp"),
			[]byte{0x00, 0x9b, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"EventTimeStamp",
			ie.NewEventTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0x9c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"AveragingWindow",
			ie.NewAveragingWindow(0xffffffff),
			[]byte{0x00, 0x9d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"PagingPolicyIndicator",
			ie.NewPagingPolicyIndicator(1),
			[]byte{0x00, 0x9e, 0x00, 0x01, 0x01},
		}, {
			"APNDNN",
			ie.NewAPNDNN("some.apn.example"),
			[]byte{
				0x00, 0x9f, 0x00, 0x11,
				0x04, 0x73, 0x6f, 0x6d, 0x65, 0x03, 0x61, 0x70, 0x6e, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"TGPPInterfaceType",
			ie.NewTGPPInterfaceType(ie.TGPPInterfaceTypeS1U),
			[]byte{0x00, 0xa0, 0x00, 0x01, 0x00},
		}, {
			"PFCPSRReqFlags",
			ie.NewPFCPSRReqFlags(0x01),
			[]byte{0x00, 0xa1, 0x00, 0x01, 0x01},
		}, {
			"PFCPAUReqFlags",
			ie.NewPFCPAUReqFlags(0x01),
			[]byte{0x00, 0xa2, 0x00, 0x01, 0x01},
		}, {
			"ActivationTime",
			ie.NewActivationTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0xa3, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"DeactivationTime",
			ie.NewDeactivationTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{0x00, 0xa4, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00},
		}, {
			"CreateMAR",
			ie.NewCreateMAR(
				ie.NewMARID(0x1111),
				ie.NewSteeringFunctionality(ie.SteeringFunctionalityATSSSLL),
				ie.NewSteeringMode(ie.SteeringModeActiveStandby),
				ie.NewTGPPAccessForwardingActionInformation(
					ie.NewFARID(0xffffffff),
					ie.NewWeight(0x01),
					ie.NewPriority(ie.PriorityActive),
					ie.NewURRID(0xffffffff),
				),
				ie.NewNonTGPPAccessForwardingActionInformation(
					ie.NewFARID(0xffffffff),
					ie.NewWeight(0x01),
					ie.NewPriority(ie.PriorityActive),
					ie.NewURRID(0xffffffff),
				),
			),
			[]byte{
				0x00, 0xa5, 0x00, 0x4c,
				0x00, 0xaa, 0x00, 0x02, 0x11, 0x11,
				0x00, 0xab, 0x00, 0x01, 0x00,
				0x00, 0xac, 0x00, 0x01, 0x00,
				0x00, 0xa6, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xa7, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"TGPPAccessForwardingActionInformation",
			ie.NewTGPPAccessForwardingActionInformation(
				ie.NewFARID(0xffffffff),
				ie.NewWeight(0x01),
				ie.NewPriority(ie.PriorityActive),
				ie.NewURRID(0xffffffff),
			),
			[]byte{
				0x00, 0xa6, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"NonTGPPAccessForwardingActionInformation",
			ie.NewNonTGPPAccessForwardingActionInformation(
				ie.NewFARID(0xffffffff),
				ie.NewWeight(0x01),
				ie.NewPriority(ie.PriorityActive),
				ie.NewURRID(0xffffffff),
			),
			[]byte{
				0x00, 0xa7, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"RemoveMAR",
			ie.NewRemoveMAR(
				ie.NewMARID(0x1111),
			),
			[]byte{
				0x00, 0xa8, 0x00, 0x06,
				0x00, 0xaa, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"UpdateMAR",
			ie.NewUpdateMAR(
				ie.NewMARID(0x1111),
				ie.NewSteeringFunctionality(ie.SteeringFunctionalityATSSSLL),
				ie.NewSteeringMode(ie.SteeringModeActiveStandby),
				ie.NewUpdateTGPPAccessForwardingActionInformation(
					ie.NewFARID(0xffffffff),
					ie.NewWeight(0x01),
					ie.NewPriority(ie.PriorityActive),
					ie.NewURRID(0xffffffff),
				),
				ie.NewUpdateNonTGPPAccessForwardingActionInformation(
					ie.NewFARID(0xffffffff),
					ie.NewWeight(0x01),
					ie.NewPriority(ie.PriorityActive),
					ie.NewURRID(0xffffffff),
				),
				ie.NewTGPPAccessForwardingActionInformation(
					ie.NewFARID(0xffffffff),
					ie.NewWeight(0x01),
					ie.NewPriority(ie.PriorityActive),
					ie.NewURRID(0xffffffff),
				),
				ie.NewNonTGPPAccessForwardingActionInformation(
					ie.NewFARID(0xffffffff),
					ie.NewWeight(0x01),
					ie.NewPriority(ie.PriorityActive),
					ie.NewURRID(0xffffffff),
				),
			),
			[]byte{
				0x00, 0xa9, 0x00, 0x88,
				0x00, 0xaa, 0x00, 0x02, 0x11, 0x11,
				0x00, 0xab, 0x00, 0x01, 0x00,
				0x00, 0xac, 0x00, 0x01, 0x00,
				0x00, 0xaf, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xb0, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xa6, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xa7, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"MARID",
			ie.NewMARID(0x1111),
			[]byte{0x00, 0xaa, 0x00, 0x02, 0x11, 0x11},
		}, {
			"SteeringFunctionality",
			ie.NewSteeringFunctionality(ie.SteeringFunctionalityATSSSLL),
			[]byte{0x00, 0xab, 0x00, 0x01, 0x00},
		}, {
			"SteeringMode",
			ie.NewSteeringMode(ie.SteeringModeActiveStandby),
			[]byte{0x00, 0xac, 0x00, 0x01, 0x00},
		}, {
			"Weight",
			ie.NewWeight(0x01),
			[]byte{0x00, 0xad, 0x00, 0x01, 0x01},
		}, {
			"Priority",
			ie.NewPriority(ie.PriorityActive),
			[]byte{0x00, 0xae, 0x00, 0x01, 0x00},
		}, {
			"UpdateTGPPAccessForwardingActionInformation",
			ie.NewUpdateTGPPAccessForwardingActionInformation(
				ie.NewFARID(0xffffffff),
				ie.NewWeight(0x01),
				ie.NewPriority(ie.PriorityActive),
				ie.NewURRID(0xffffffff),
			),
			[]byte{
				0x00, 0xaf, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"UpdateNonTGPPAccessForwardingActionInformation",
			ie.NewUpdateNonTGPPAccessForwardingActionInformation(
				ie.NewFARID(0xffffffff),
				ie.NewWeight(0x01),
				ie.NewPriority(ie.PriorityActive),
				ie.NewURRID(0xffffffff),
			),
			[]byte{
				0x00, 0xb0, 0x00, 0x1a,
				0x00, 0x6c, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xad, 0x00, 0x01, 0x01,
				0x00, 0xae, 0x00, 0x01, 0x00,
				0x00, 0x51, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"UEIPAddressPoolIdentity",
			ie.NewUEIPAddressPoolIdentity("go-pfcp"),
			[]byte{0x00, 0xb1, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"AlternativeSMFIPAddress/IPv4",
			ie.NewAlternativeSMFIPAddress(net.ParseIP("127.0.0.1"), nil),
			[]byte{0x00, 0xb2, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"AlternativeSMFIPAddress/IPv6",
			ie.NewAlternativeSMFIPAddress(nil, net.ParseIP("2001::1")),
			[]byte{0x00, 0xb2, 0x00, 0x11, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"AlternativeSMFIPAddress/Both",
			ie.NewAlternativeSMFIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{0x00, 0xb2, 0x00, 0x15, 0x03, 0x7f, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"PacketReplicationAndDetectionCarryOnInformation",
			ie.NewPacketReplicationAndDetectionCarryOnInformation(0x0f),
			[]byte{0x00, 0xb3, 0x00, 0x01, 0x0f},
		}, {
			"SMFSetID",
			ie.NewSMFSetID("go-pfcp.epc.3gppnetwork.org"),
			[]byte{0x00, 0xb4, 0x00, 0x1c, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70, 0x03, 0x65, 0x70, 0x63, 0x0b, 0x33, 0x67, 0x70, 0x70, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x03, 0x6f, 0x72, 0x67},
		}, {
			"QuotaValidityTime",
			ie.NewQuotaValidityTime(10 * time.Second),
			[]byte{0x00, 0xb5, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"NumberOfReports",
			ie.NewNumberOfReports(0x1111),
			[]byte{0x00, 0xb6, 0x00, 0x02, 0x11, 0x11},
		}, {
			"PFCPSessionRetentionInformation",
			ie.NewPFCPSessionRetentionInformation(
				ie.NewCPPFCPEntityIPAddress(net.ParseIP("127.0.0.1"), nil),
			),
			[]byte{
				0x00, 0xb7, 0x00, 0x09,
				0x00, 0xb9, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"PFCPASRspFlags",
			ie.NewPFCPASRspFlags(0x01),
			[]byte{0x00, 0xb8, 0x00, 0x01, 0x01},
		}, {
			"CPPFCPEntityIPAddress/IPv4",
			ie.NewCPPFCPEntityIPAddress(net.ParseIP("127.0.0.1"), nil),
			[]byte{0x00, 0xb9, 0x00, 0x05, 0x02, 0x7f, 0x00, 0x00, 0x01},
		}, {
			"CPPFCPEntityIPAddress/IPv6",
			ie.NewCPPFCPEntityIPAddress(nil, net.ParseIP("2001::1")),
			[]byte{0x00, 0xb9, 0x00, 0x11, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"CPPFCPEntityIPAddress/Both",
			ie.NewCPPFCPEntityIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{0x00, 0xb9, 0x00, 0x15, 0x03, 0x7f, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
		}, {
			"PFCPSEReqFlags",
			ie.NewPFCPSEReqFlags(0x01),
			[]byte{0x00, 0xba, 0x00, 0x01, 0x01},
		}, {
			"UserPlanePathRecoveryReport",
			ie.NewUserPlanePathRecoveryReport(
				ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
			),
			[]byte{
				0x00, 0xbb, 0x00, 0x23,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"IPMulticastAddressingInfo",
			ie.NewIPMulticastAddressingInfo(
				ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
				ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
			),
			[]byte{
				0x00, 0xbc, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
			},
		}, {
			"JoinIPMulticastInformationWithinUsageReport",
			ie.NewJoinIPMulticastInformationWithinUsageReport(
				ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
				ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
			),
			[]byte{
				0x00, 0xbd, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
			},
		}, {
			"LeaveIPMulticastInformationWithinUsageReport",
			ie.NewLeaveIPMulticastInformationWithinUsageReport(
				ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
				ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
			),
			[]byte{
				0x00, 0xbe, 0x00, 0x17,
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
			},
		}, {
			"IPMulticastAddress/Any",
			ie.NewIPMulticastAddress(nil, nil, nil, nil),
			[]byte{
				0x00, 0xbf, 0x00, 0x01,
				0x08,
			},
		}, {
			"IPMulticastAddress/All",
			ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{
				0x00, 0xbf, 0x00, 0x29,
				0x07,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"IPMulticastAddress/IPv4",
			ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
			[]byte{
				0x00, 0xbf, 0x00, 0x09,
				0x06,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"IPMulticastAddress/IPv6",
			ie.NewIPMulticastAddress(nil, net.ParseIP("2001::1"), nil, net.ParseIP("2001::1")),
			[]byte{
				0x00, 0xbf, 0x00, 0x21,
				0x05,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"IPMulticastAddress/IPv4/NoRange",
			ie.NewIPMulticastAddress(net.ParseIP("127.0.0.1"), nil, nil, nil),
			[]byte{
				0x00, 0xbf, 0x00, 0x05,
				0x02,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"IPMulticastAddress/IPv6/NoRange",
			ie.NewIPMulticastAddress(nil, net.ParseIP("2001::1"), nil, nil),
			[]byte{
				0x00, 0xbf, 0x00, 0x11,
				0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"SourceIPAddress/IPv4/Prefix",
			ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 24),
			[]byte{
				0x00, 0xc0, 0x00, 0x06,
				0x06,
				0x7f, 0x00, 0x00, 0x01, 0x18,
			},
		}, {
			"SourceIPAddress/IPv6/Prefix",
			ie.NewSourceIPAddress(nil, net.ParseIP("2001::1"), 64),
			[]byte{
				0x00, 0xc0, 0x00, 0x12,
				0x05,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40,
			},
		}, {
			"SourceIPAddress/IPv4/IPv6",
			ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), 0),
			[]byte{
				0x00, 0xc0, 0x00, 0x15,
				0x03,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"SourceIPAddress/IPv4",
			ie.NewSourceIPAddress(net.ParseIP("127.0.0.1"), nil, 0),
			[]byte{
				0x00, 0xc0, 0x00, 0x05,
				0x02,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"SourceIPAddress/IPv6",
			ie.NewSourceIPAddress(nil, net.ParseIP("2001::1"), 0),
			[]byte{
				0x00, 0xc0, 0x00, 0x11,
				0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"PacketRateStatus/All",
			ie.NewPacketRateStatus(0x07, 0x1111, 0x2222, 0x3333, 0x4444, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{
				0x00, 0xc1, 0x00, 0x11,
				0x07,
				0x11, 0x11,
				0x22, 0x22,
				0x33, 0x33,
				0x44, 0x44,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"PacketRateStatus/DL/APR",
			ie.NewPacketRateStatus(0x06, 0, 0, 0x3333, 0x4444, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{
				0x00, 0xc1, 0x00, 0x0d,
				0x06,
				0x33, 0x33,
				0x44, 0x44,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"PacketRateStatus/UL/APR",
			ie.NewPacketRateStatus(0x05, 0x1111, 0x2222, 0, 0, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{
				0x00, 0xc1, 0x00, 0x0d,
				0x05,
				0x11, 0x11,
				0x22, 0x22,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"PacketRateStatus/DL",
			ie.NewPacketRateStatus(0x02, 0, 0, 0x3333, 0, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{
				0x00, 0xc1, 0x00, 0x0b,
				0x02,
				0x33, 0x33,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"PacketRateStatus/UL",
			ie.NewPacketRateStatus(0x01, 0x1111, 0, 0, 0, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			[]byte{
				0x00, 0xc1, 0x00, 0x0b,
				0x01,
				0x11, 0x11,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"CreateBridgeInfoForTSC",
			ie.NewCreateBridgeInfoForTSC(1),
			[]byte{0x00, 0xc2, 0x00, 0x01, 0x01},
		}, {
			"CreatedBridgeInfoForTSC",
			ie.NewCreatedBridgeInfoForTSC(
				ie.NewDSTTPortNumber(0xffffffff),
				ie.NewNWTTPortNumber(0xffffffff),
				ie.NewTSNBridgeID(mac1),
			),
			[]byte{
				0x00, 0xc3, 0x00, 0x1b,
				0x00, 0xc4, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xc5, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xc6, 0x00, 0x07, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
			},
		}, {
			"DSTTPortNumber",
			ie.NewDSTTPortNumber(0xffffffff),
			[]byte{0x00, 0xc4, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"NWTTPortNumber",
			ie.NewNWTTPortNumber(0xffffffff),
			[]byte{0x00, 0xc5, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"TSNBridgeID/MAC",
			ie.NewTSNBridgeID(mac1),
			[]byte{0x00, 0xc6, 0x00, 0x07, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01},
		}, {
			"TSNBridgeID/None",
			ie.NewTSNBridgeID(nil),
			[]byte{0x00, 0xc6, 0x00, 0x01, 0x00},
		}, {
			"TSCManagementInformationWithinSessionModificationRequest",
			ie.NewTSCManagementInformationWithinSessionModificationRequest(
				ie.NewPortManagementInformationContainer("go-pfcp"),
			),
			[]byte{
				0x00, 0xc7, 0x00, 0x0b,
				0x00, 0xca, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"TSCManagementInformationWithinSessionModificationResponse",
			ie.NewTSCManagementInformationWithinSessionModificationResponse(
				ie.NewPortManagementInformationContainer("go-pfcp"),
			),
			[]byte{
				0x00, 0xc8, 0x00, 0x0b,
				0x00, 0xca, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"TSCManagementInformationWithinSessionReportRequest",
			ie.NewTSCManagementInformationWithinSessionReportRequest(
				ie.NewPortManagementInformationContainer("go-pfcp"),
			),
			[]byte{
				0x00, 0xc9, 0x00, 0x0b,
				0x00, 0xca, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"PortManagementInformationContainer",
			ie.NewPortManagementInformationContainer("go-pfcp"),
			[]byte{0x00, 0xca, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"ClockDriftControlInformation",
			ie.NewClockDriftControlInformation(
				ie.NewRequestedClockDriftInformation(1, 1),
				ie.NewTSNTimeDomainNumber(255),
				ie.NewTimeOffsetThreshold(10*time.Second),
				ie.NewCumulativeRateRatioThreshold(0xffffffff),
			),
			[]byte{
				0x00, 0xcb, 0x00, 0x1e,
				0x00, 0xcc, 0x00, 0x01, 0x03,
				0x00, 0xce, 0x00, 0x01, 0xff,
				0x00, 0xcf, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00,
				0x00, 0xd0, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
			},
		}, {
			"RequestedClockDriftInformation",
			ie.NewRequestedClockDriftInformation(1, 1),
			[]byte{0x00, 0xcc, 0x00, 0x01, 0x03},
		}, {
			"ClockDriftReport",
			ie.NewClockDriftReport(
				ie.NewTSNTimeDomainNumber(255),
				ie.NewTimeOffsetThreshold(10*time.Second),
				ie.NewCumulativeRateRatioThreshold(0xffffffff),
				ie.NewEventTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			),
			[]byte{
				0x00, 0xcd, 0x00, 0x21,
				0x00, 0xce, 0x00, 0x01, 0xff,
				0x00, 0xcf, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00,
				0x00, 0xd0, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x9c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"TSNTimeDomainNumber",
			ie.NewTSNTimeDomainNumber(255),
			[]byte{0x00, 0xce, 0x00, 0x01, 0xff},
		}, {
			"TimeOffsetThreshold",
			ie.NewTimeOffsetThreshold(10 * time.Second),
			[]byte{0x00, 0xcf, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00},
		}, {
			"CumulativeRateRatioThreshold",
			ie.NewCumulativeRateRatioThreshold(0xffffffff),
			[]byte{0x00, 0xd0, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"TimeOffsetMeasurement",
			ie.NewTimeOffsetMeasurement(10 * time.Second),
			[]byte{0x00, 0xd1, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00},
		}, {
			"CumulativeRateRatioMeasurement",
			ie.NewCumulativeRateRatioMeasurement(0xffffffff),
			[]byte{0x00, 0xd2, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"RemoveSRR",
			ie.NewRemoveSRR(
				ie.NewSRRID(255),
			),
			[]byte{
				0x00, 0xd3, 0x00, 0x05,
				0x00, 0xd7, 0x00, 0x01, 0xff,
			},
		}, {
			"CreateSRR",
			ie.NewCreateSRR(
				ie.NewSRRID(255),
				ie.NewAccessAvailabilityControlInformation(
					ie.NewRequestedAccessAvailabilityInformation(1),
				),
				ie.NewQoSMonitoringPerQoSFlowControlInformation(
					ie.NewQFI(0x01),
					ie.NewRequestedQoSMonitoring(1, 1, 1),
					ie.NewReportingFrequency(1, 1, 1),
					ie.NewPacketDelayThresholds(0x07, 0x11111111, 0x22222222, 0x33333333),
					ie.NewMinimumWaitTime(10*time.Second),
					ie.NewMeasurementPeriod(10*time.Second),
				),
			),
			[]byte{
				0x00, 0xd4, 0x00, 0x42,
				0x00, 0xd7, 0x00, 0x01, 0xff,
				0x00, 0xd8, 0x00, 0x05,
				0x00, 0xd9, 0x00, 0x01, 0x01,
				0x00, 0xf2, 0x00, 0x30,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0xf3, 0x00, 0x01, 0x07,
				0x00, 0xf4, 0x00, 0x01, 0x07,
				0x00, 0xf5, 0x00, 0x0d,
				0x07,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
				0x00, 0xf6, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
			},
		}, {
			"UpdateSRR",
			ie.NewUpdateSRR(
				ie.NewSRRID(255),
				ie.NewAccessAvailabilityControlInformation(
					ie.NewRequestedAccessAvailabilityInformation(1),
				),
				ie.NewQoSMonitoringPerQoSFlowControlInformation(
					ie.NewQFI(0x01),
					ie.NewRequestedQoSMonitoring(1, 1, 1),
					ie.NewReportingFrequency(1, 1, 1),
					ie.NewPacketDelayThresholds(0x07, 0x11111111, 0x22222222, 0x33333333),
					ie.NewMinimumWaitTime(10*time.Second),
					ie.NewMeasurementPeriod(10*time.Second),
				),
			),
			[]byte{
				0x00, 0xd5, 0x00, 0x42,
				0x00, 0xd7, 0x00, 0x01, 0xff,
				0x00, 0xd8, 0x00, 0x05,
				0x00, 0xd9, 0x00, 0x01, 0x01,
				0x00, 0xf2, 0x00, 0x30,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0xf3, 0x00, 0x01, 0x07,
				0x00, 0xf4, 0x00, 0x01, 0x07,
				0x00, 0xf5, 0x00, 0x0d,
				0x07,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
				0x00, 0xf6, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
			},
		}, {
			"SessionReport",
			ie.NewSessionReport(
				ie.NewSRRID(255),
				ie.NewAccessAvailabilityControlInformation(
					ie.NewRequestedAccessAvailabilityInformation(1),
				),
				ie.NewQoSMonitoringReport(
					ie.NewQFI(0x01),
					ie.NewQoSMonitoringMeasurement(0x0f, 0x11111111, 0x22222222, 0x33333333),
					ie.NewEventTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
					ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				),
			),
			[]byte{
				0x00, 0xd6, 0x00, 0x38,
				0x00, 0xd7, 0x00, 0x01, 0xff,
				0x00, 0xd8, 0x00, 0x05,
				0x00, 0xd9, 0x00, 0x01, 0x01,
				0x00, 0xf7, 0x00, 0x26,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0xf8, 0x00, 0x0d,
				0x0f,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
				0x00, 0x9c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"SRRID",
			ie.NewSRRID(255),
			[]byte{0x00, 0xd7, 0x00, 0x01, 0xff},
		}, {
			"AccessAvailabilityControlInformation",
			ie.NewAccessAvailabilityControlInformation(
				ie.NewRequestedAccessAvailabilityInformation(1),
			),
			[]byte{
				0x00, 0xd8, 0x00, 0x05,
				0x00, 0xd9, 0x00, 0x01, 0x01,
			},
		}, {
			"RequestedAccessAvailabilityInformation",
			ie.NewRequestedAccessAvailabilityInformation(1),
			[]byte{0x00, 0xd9, 0x00, 0x01, 0x01},
		}, {
			"AccessAvailabilityReport",
			ie.NewAccessAvailabilityReport(
				ie.NewAccessAvailabilityInformation(3, 3),
			),
			[]byte{
				0x00, 0xda, 0x00, 0x05,
				0x00, 0xdb, 0x00, 0x01, 0x0f,
			},
		}, {
			"AccessAvailabilityInformation",
			ie.NewAccessAvailabilityInformation(3, 3),
			[]byte{0x00, 0xdb, 0x00, 0x01, 0x0f},
		}, {
			"ProvideATSSSControlInformation",
			ie.NewProvideATSSSControlInformation(
				ie.NewMPTCPControlInformation(1),
				ie.NewATSSSLLControlInformation(1),
				ie.NewPMFControlInformation(1),
			),
			[]byte{
				0x00, 0xdc, 0x00, 0x0f,
				0x00, 0xde, 0x00, 0x01, 0x01,
				0x00, 0xdf, 0x00, 0x01, 0x01,
				0x00, 0xe0, 0x00, 0x01, 0x01,
			},
		}, {
			"ATSSSControlParameters",
			ie.NewATSSSControlParameters(
				ie.NewMPTCPParameters(
					ie.NewMPTCPAddressInformation(ie.MPTCPProxyTransportConverter, 8080, net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
					ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
				),
				ie.NewATSSSLLParameters(
					ie.NewATSSSLLInformation(1),
				),
				ie.NewPMFParameters(
					ie.NewPMFAddressInformation(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), 8080, 8081, mac1, mac2),
				),
			),
			[]byte{
				0x00, 0xdd, 0x00, 0x83,
				0x00, 0xe1, 0x00, 0x49,
				0x00, 0xe4, 0x00, 0x18,
				0x03,
				0x01,
				0x1f, 0x90,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x00, 0xe5, 0x00, 0x29,
				0x0f,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x00, 0xe2, 0x00, 0x05,
				0x00, 0xe7, 0x00, 0x01, 0x01,
				0x00, 0xe3, 0x00, 0x29,
				0x00, 0xe6, 0x00, 0x25,
				0x03,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x1f, 0x90,
				0x1f, 0x91,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
			},
		}, {
			"MPTCPControlInformation",
			ie.NewMPTCPControlInformation(1),
			[]byte{0x00, 0xde, 0x00, 0x01, 0x01},
		}, {
			"ATSSSLLControlInformation",
			ie.NewATSSSLLControlInformation(1),
			[]byte{0x00, 0xdf, 0x00, 0x01, 0x01},
		}, {
			"PMFControlInformation",
			ie.NewPMFControlInformation(1),
			[]byte{0x00, 0xe0, 0x00, 0x01, 0x01},
		}, {
			"MPTCPParameters",
			ie.NewMPTCPParameters(
				ie.NewMPTCPAddressInformation(ie.MPTCPProxyTransportConverter, 8080, net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
				ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			),
			[]byte{
				0x00, 0xe1, 0x00, 0x49,
				0x00, 0xe4, 0x00, 0x18,
				0x03,
				0x01,
				0x1f, 0x90,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x00, 0xe5, 0x00, 0x29,
				0x0f,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"ATSSSLLParameters",
			ie.NewATSSSLLParameters(
				ie.NewATSSSLLInformation(1),
			),
			[]byte{
				0x00, 0xe2, 0x00, 0x05,
				0x00, 0xe7, 0x00, 0x01, 0x01,
			},
		}, {
			"PMFParameters",
			ie.NewPMFParameters(
				ie.NewPMFAddressInformation(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), 8080, 8081, mac1, mac2),
			),
			[]byte{
				0x00, 0xe3, 0x00, 0x29,
				0x00, 0xe6, 0x00, 0x25,
				0x03,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x1f, 0x90,
				0x1f, 0x91,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
			},
		}, {
			"MPTCPAddressInformation/Both",
			ie.NewMPTCPAddressInformation(ie.MPTCPProxyTransportConverter, 8080, net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{
				0x00, 0xe4, 0x00, 0x18,
				0x03,
				0x01,
				0x1f, 0x90,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"MPTCPAddressInformation/IPv6",
			ie.NewMPTCPAddressInformation(ie.MPTCPProxyTransportConverter, 8080, nil, net.ParseIP("2001::1")),
			[]byte{
				0x00, 0xe4, 0x00, 0x14,
				0x02,
				0x01,
				0x1f, 0x90,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"MPTCPAddressInformation/IPv4",
			ie.NewMPTCPAddressInformation(ie.MPTCPProxyTransportConverter, 8080, net.ParseIP("127.0.0.1"), nil),
			[]byte{
				0x00, 0xe4, 0x00, 0x08,
				0x01,
				0x01,
				0x1f, 0x90,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"UELinkSpecificIPAddress/All",
			ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{
				0x00, 0xe5, 0x00, 0x29,
				0x0f,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"UELinkSpecificIPAddress/IPv4/Both",
			ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), net.ParseIP("2001::1")),
			[]byte{
				0x00, 0xe5, 0x00, 0x19,
				0x0d,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"UELinkSpecificIPAddress/Both/NV4",
			ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), net.ParseIP("127.0.0.1"), nil),
			[]byte{
				0x00, 0xe5, 0x00, 0x19,
				0x07,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"UELinkSpecificIPAddress/IPv4/IPv4",
			ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), nil, net.ParseIP("127.0.0.1"), nil),
			[]byte{
				0x00, 0xe5, 0x00, 0x09,
				0x05,
				0x7f, 0x00, 0x00, 0x01,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"UELinkSpecificIPAddress/Both/None",
			ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), nil, nil),
			[]byte{
				0x00, 0xe5, 0x00, 0x15,
				0x03,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
			},
		}, {
			"UELinkSpecificIPAddress/IPv4/None",
			ie.NewUELinkSpecificIPAddress(net.ParseIP("127.0.0.1"), nil, nil, nil),
			[]byte{
				0x00, 0xe5, 0x00, 0x05,
				0x01,
				0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"PMFAddressInformation/Both",
			ie.NewPMFAddressInformation(net.ParseIP("127.0.0.1"), net.ParseIP("2001::1"), 8080, 8081, mac1, mac2),
			[]byte{
				0x00, 0xe6, 0x00, 0x25,
				0x03,
				0x7f, 0x00, 0x00, 0x01,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x1f, 0x90,
				0x1f, 0x91,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
			},
		}, {
			"PMFAddressInformation/IPv6",
			ie.NewPMFAddressInformation(nil, net.ParseIP("2001::1"), 8080, 8081, mac1, mac2),
			[]byte{
				0x00, 0xe6, 0x00, 0x21,
				0x02,
				0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x1f, 0x90,
				0x1f, 0x91,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
			},
		}, {
			"PMFAddressInformation/IPv4",
			ie.NewPMFAddressInformation(net.ParseIP("127.0.0.1"), nil, 8080, 8081, mac1, mac2),
			[]byte{
				0x00, 0xe6, 0x00, 0x15,
				0x01,
				0x7f, 0x00, 0x00, 0x01,
				0x1f, 0x90,
				0x1f, 0x91,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x01,
				0x12, 0x34, 0x56, 0x78, 0x90, 0x02,
			},
		}, {
			"ATSSSLLInformation",
			ie.NewATSSSLLInformation(1),
			[]byte{0x00, 0xe7, 0x00, 0x01, 0x01},
		}, {
			"DataNetworkAccessIdentifier",
			ie.NewDataNetworkAccessIdentifier("go-pfcp"),
			[]byte{0x00, 0xe8, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"UEIPAddressPoolInformation",
			ie.NewUEIPAddressPoolInformation(
				ie.NewUEIPAddressPoolIdentity("go-pfcp"),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewSNSSAI(0x11, 0x223344),
				ie.NewIPVersion(true, false),
			),
			[]byte{
				0x00, 0xe9, 0x00, 0x32,
				0x00, 0xb1, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x01, 0x01, 0x00, 0x04, 0x11, 0x22, 0x33, 0x44,
				0x01, 0x02, 0x00, 0x01, 0x01,
			},
		}, {
			"AveragePacketDelay",
			ie.NewAveragePacketDelay(10 * time.Second),
			[]byte{0x00, 0xea, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10},
		}, {
			"MinimumPacketDelay",
			ie.NewMinimumPacketDelay(10 * time.Second),
			[]byte{0x00, 0xeb, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10},
		}, {
			"MaximumPacketDelay",
			ie.NewMaximumPacketDelay(10 * time.Second),
			[]byte{0x00, 0xec, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10},
		}, {
			"QoSReportTrigger",
			ie.NewQoSReportTrigger(1, 1, 1),
			[]byte{0x00, 0xed, 0x00, 0x01, 0x07},
		}, {
			"GTPUPathQoSControlInformation",
			ie.NewGTPUPathQoSControlInformation(
				ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
				ie.NewGTPUPathInterfaceType(1, 1),
				ie.NewQoSReportTrigger(1, 1, 1),
				ie.NewTransportLevelMarking(0x1111),
				ie.NewMeasurementMethod(1, 1, 1),
				ie.NewAveragePacketDelay(10*time.Second),
				ie.NewMinimumPacketDelay(10*time.Second),
				ie.NewMaximumPacketDelay(10*time.Second),
				ie.NewTimer(20*time.Hour),
			),
			[]byte{
				0x00, 0xee, 0x00, 0x55,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xf1, 0x00, 0x01, 0x03,
				0x00, 0xed, 0x00, 0x01, 0x07,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
				0x00, 0x3e, 0x00, 0x01, 0x07,
				0x00, 0xea, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0xeb, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0xec, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0x37, 0x00, 0x01, 0x82,
			},
		}, {
			"GTPUPathQoSReport",
			ie.NewGTPUPathQoSReport(
				ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
				ie.NewGTPUPathInterfaceType(1, 1),
				ie.NewQoSReportTrigger(1, 1, 1),
				ie.NewEventTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewQoSInformationInGTPUPathQoSReport(
					ie.NewAveragePacketDelay(10*time.Second),
					ie.NewMinimumPacketDelay(10*time.Second),
					ie.NewMaximumPacketDelay(10*time.Second),
					ie.NewTransportLevelMarking(0x1111),
				),
			),
			[]byte{
				0x00, 0xef, 0x00, 0x5f,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xf1, 0x00, 0x01, 0x03,
				0x00, 0xed, 0x00, 0x01, 0x07,
				0x00, 0x9c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0xf0, 0x00, 0x1e,
				0x00, 0xea, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0xeb, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0xec, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"QoSInformationInGTPUPathQoSReport",
			ie.NewQoSInformationInGTPUPathQoSReport(
				ie.NewAveragePacketDelay(10*time.Second),
				ie.NewMinimumPacketDelay(10*time.Second),
				ie.NewMaximumPacketDelay(10*time.Second),
				ie.NewTransportLevelMarking(0x1111),
			),
			[]byte{
				0x00, 0xf0, 0x00, 0x1e,
				0x00, 0xea, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0xeb, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0xec, 0x00, 0x04, 0x00, 0x00, 0x27, 0x10,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"GTPUPathInterfaceType",
			ie.NewGTPUPathInterfaceType(1, 1),
			[]byte{0x00, 0xf1, 0x00, 0x01, 0x03},
		}, {
			"QoSMonitoringPerQoSFlowControlInformation",
			ie.NewQoSMonitoringPerQoSFlowControlInformation(
				ie.NewQFI(0x01),
				ie.NewRequestedQoSMonitoring(1, 1, 1),
				ie.NewReportingFrequency(1, 1, 1),
				ie.NewPacketDelayThresholds(0x07, 0x11111111, 0x22222222, 0x33333333),
				ie.NewMinimumWaitTime(10*time.Second),
				ie.NewMeasurementPeriod(10*time.Second),
			),
			[]byte{
				0x00, 0xf2, 0x00, 0x30,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0xf3, 0x00, 0x01, 0x07,
				0x00, 0xf4, 0x00, 0x01, 0x07,
				0x00, 0xf5, 0x00, 0x0d,
				0x07,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
				0x00, 0xf6, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
				0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a,
			},
		}, {
			"RequestedQoSMonitoring",
			ie.NewRequestedQoSMonitoring(1, 1, 1),
			[]byte{0x00, 0xf3, 0x00, 0x01, 0x07},
		}, {
			"ReportingFrequency",
			ie.NewReportingFrequency(1, 1, 1),
			[]byte{0x00, 0xf4, 0x00, 0x01, 0x07},
		}, {
			"PacketDelayThresholds",
			ie.NewPacketDelayThresholds(0x07, 0x11111111, 0x22222222, 0x33333333),
			[]byte{
				0x00, 0xf5, 0x00, 0x0d,
				0x07,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
			},
		}, {
			"MinimumWaitTime",
			ie.NewMinimumWaitTime(10 * time.Second),
			[]byte{0x00, 0xf6, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a},
		}, {
			"QoSMonitoringReport",
			ie.NewQoSMonitoringReport(
				ie.NewQFI(0x01),
				ie.NewQoSMonitoringMeasurement(0x0f, 0x11111111, 0x22222222, 0x33333333),
				ie.NewEventTimeStamp(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
				ie.NewStartTime(time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			),
			[]byte{
				0x00, 0xf7, 0x00, 0x26,
				0x00, 0x7c, 0x00, 0x01, 0x01,
				0x00, 0xf8, 0x00, 0x0d,
				0x0f,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
				0x00, 0x9c, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
				0x00, 0x4b, 0x00, 0x04, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"QoSMonitoringMeasurement",
			ie.NewQoSMonitoringMeasurement(0x0f, 0x11111111, 0x22222222, 0x33333333),
			[]byte{
				0x00, 0xf8, 0x00, 0x0d,
				0x0f,
				0x11, 0x11, 0x11, 0x11,
				0x22, 0x22, 0x22, 0x22,
				0x33, 0x33, 0x33, 0x33,
			},
		}, {
			"MTEDTControlInformation",
			ie.NewMTEDTControlInformation(1),
			[]byte{0x00, 0xf9, 0x00, 0x01, 0x01},
		}, {
			"DLDataPacketsSize",
			ie.NewDLDataPacketsSize(0xffff),
			[]byte{0x00, 0xfa, 0x00, 0x02, 0xff, 0xff},
		}, {
			"QERControlIndications",
			ie.NewQERControlIndications(1, 1, 1),
			[]byte{0x00, 0xfb, 0x00, 0x01, 0x07},
		}, {
			"PacketRateStatusReport",
			ie.NewPacketRateStatusReport(
				ie.NewQERID(0xffffffff),
				ie.NewPacketRateStatus(0x07, 0x1111, 0x2222, 0x3333, 0x4444, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			),
			[]byte{
				0x00, 0xfc, 0x00, 0x1d,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xc1, 0x00, 0x11,
				0x07,
				0x11, 0x11,
				0x22, 0x22,
				0x33, 0x33,
				0x44, 0x44,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"NFInstanceID",
			ie.NewNFInstanceID([]byte{0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x44}),
			[]byte{0x00, 0xfd, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x44},
		}, {
			"EthernetContextInformation",
			ie.NewEthernetContextInformation(
				ie.NewMACAddressesDetected(
					ie.NewCTAG(0x07, 1, 1, 4095),
					ie.NewSTAG(0x07, 1, 1, 4095),
					mac1, mac2, mac3, mac4,
				),
			),
			[]byte{
				0x00, 0xfe, 0x00, 0x25,
				0x00, 0x90, 0x00, 0x21,
				0x04, 0x12, 0x34, 0x56, 0x78, 0x90, 0x01, 0x12, 0x34, 0x56, 0x78, 0x90, 0x02, 0x12, 0x34, 0x56, 0x78, 0x90, 0x03, 0x12, 0x34, 0x56, 0x78, 0x90, 0x04,
				0x03, 0x07, 0xf9, 0xff,
				0x03, 0x07, 0xf9, 0xff,
			},
		}, {
			"RedundantTransmissionParameters/PDI",
			ie.NewRedundantTransmissionParametersInPDI(
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
				ie.NewNetworkInstance("some.instance.example"),
			),
			[]byte{
				0x00, 0xff, 0x00, 0x26,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"RedundantTransmissionParameters/FAR",
			ie.NewRedundantTransmissionParametersInFAR(
				ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
				ie.NewNetworkInstance("some.instance.example"),
			),
			[]byte{
				0x00, 0xff, 0x00, 0x27,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"UpdatedPDR",
			ie.NewUpdatedPDR(
				ie.NewPDRID(0xffff),
				ie.NewFTEID(0x01, 0x11111111, net.ParseIP("127.0.0.1"), nil, 0),
			),
			[]byte{
				0x01, 0x00, 0x00, 0x13,
				0x00, 0x38, 0x00, 0x02, 0xff, 0xff,
				0x00, 0x15, 0x00, 0x09, 0x01, 0x11, 0x11, 0x11, 0x11, 0x7f, 0x00, 0x00, 0x01,
			},
		}, {
			"SNSSAI",
			ie.NewSNSSAI(0x11, 0x223344),
			[]byte{0x01, 0x01, 0x00, 0x04, 0x11, 0x22, 0x33, 0x44},
		}, {
			"IPVersion/v4",
			ie.NewIPVersion(true, false),
			[]byte{0x01, 0x02, 0x00, 0x01, 0x01},
		}, {
			"IPVersion/v6",
			ie.NewIPVersion(false, true),
			[]byte{0x01, 0x02, 0x00, 0x01, 0x02},
		}, {
			"IPVersion/v4v6",
			ie.NewIPVersion(true, true),
			[]byte{0x01, 0x02, 0x00, 0x01, 0x03},
		}, {
			"PFCPASReqFlags",
			ie.NewPFCPASReqFlags(0x01),
			[]byte{0x01, 0x03, 0x00, 0x01, 0x01},
		}, {
			"DataStatus",
			ie.NewDataStatus(0x03),
			[]byte{0x01, 0x04, 0x00, 0x01, 0x03},
		}, {
			"ProvideRDSConfigurationInformation",
			ie.NewProvideRDSConfigurationInformation(
				ie.NewRDSConfigurationInformation(0x01),
			),
			[]byte{0x01, 0x05, 0x00, 0x05, 0x01, 0x06, 0x00, 0x01, 0x01},
		}, {
			"RDSConfigurationInformation",
			ie.NewRDSConfigurationInformation(0x01),
			[]byte{0x01, 0x06, 0x00, 0x01, 0x01},
		}, {
			"QueryPacketRateStatusWithinSessionModificationRequest",
			ie.NewQueryPacketRateStatusWithinSessionModificationRequest(
				ie.NewQERID(0xffffffff),
			),
			[]byte{0x01, 0x07, 0x00, 0x08, 0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff},
		}, {
			"PacketRateStatusReportWithinSessionModificationResponse",
			ie.NewPacketRateStatusReportWithinSessionModificationResponse(
				ie.NewQERID(0xffffffff),
				ie.NewPacketRateStatus(0x07, 0x1111, 0x2222, 0x3333, 0x4444, time.Date(2019, time.January, 1, 0, 0, 0, 0, time.UTC)),
			),
			[]byte{
				0x01, 0x08, 0x00, 0x1d,
				0x00, 0x6d, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0xc1, 0x00, 0x11,
				0x07,
				0x11, 0x11,
				0x22, 0x22,
				0x33, 0x33,
				0x44, 0x44,
				0x00, 0x00, 0x00, 0x00, 0xdf, 0xd5, 0x2c, 0x00,
			},
		}, {
			"MPTCPApplicableIndication",
			ie.NewMPTCPApplicableIndication(0x01),
			[]byte{0x01, 0x09, 0x00, 0x01, 0x01},
		}, {
			"BridgeManagementInformationContainer",
			ie.NewBridgeManagementInformationContainer("go-pfcp"),
			[]byte{0x01, 0x0a, 0x00, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70},
		}, {
			"UEIPAddressUsageInformation",
			ie.NewUEIPAddressUsageInformation(
				ie.NewSequenceNumber(0xffffffff),
				ie.NewMetric(0x01),
				ie.NewValidityTimer(10*time.Second),
				ie.NewNumberOfUEIPAddresses(0x01, 4, 0),
				ie.NewNetworkInstance("some.instance.example"),
				ie.NewUEIPAddressPoolIdentity("go-pfcp"),
			),
			[]byte{
				0x01, 0x0b, 0x00, 0x41,
				0x00, 0x34, 0x00, 0x04, 0xff, 0xff, 0xff, 0xff,
				0x00, 0x35, 0x00, 0x01, 0x01,
				0x01, 0x0d, 0x00, 0x02, 0x00, 0x0a,
				0x01, 0x0c, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x04,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0xb1, 0x00, 0x08, 0x07, 0x67, 0x6f, 0x2d, 0x70, 0x66, 0x63, 0x70,
			},
		}, {
			"NumberOfUEIPAddresses/IPv4",
			ie.NewNumberOfUEIPAddresses(0x01, 4, 0),
			[]byte{0x01, 0x0c, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x04},
		}, {
			"NumberOfUEIPAddresses/IPv6",
			ie.NewNumberOfUEIPAddresses(0x02, 0, 6),
			[]byte{0x01, 0x0c, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x06},
		}, {
			"NumberOfUEIPAddresses/IPv4v6",
			ie.NewNumberOfUEIPAddresses(0x03, 4, 6),
			[]byte{0x01, 0x0c, 0x00, 0x09, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06},
		}, {
			"ValidityTimer",
			ie.NewValidityTimer(10 * time.Second),
			[]byte{0x01, 0x0d, 0x00, 0x02, 0x00, 0x0a},
		}, {
			"RedundantTransmissionForwardingParameters",
			ie.NewRedundantTransmissionForwardingParameters(
				ie.NewOuterHeaderCreation(0x0100, 0x11223344, "127.0.0.1", "", 0, 0, 0),
				ie.NewNetworkInstance("some.instance.example"),
			),
			[]byte{
				0x01, 0x0e, 0x00, 0x27,
				0x00, 0x54, 0x00, 0x0a, 0x01, 0x00, 0x11, 0x22, 0x33, 0x44, 0x7f, 0x00, 0x00, 0x01,
				0x00, 0x16, 0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
			},
		}, {
			"TransportDelayReporting",
			ie.NewTransportDelayReporting(
				ie.NewRemoteGTPUPeer(0x0e, "127.0.0.1", "", ie.DstInterfaceAccess, "some.instance.example"),
				ie.NewTransportLevelMarking(0x1111),
			),
			[]byte{
				0x01, 0x0f, 0x00, 0x29,
				0x00, 0x67, 0x00, 0x1f,
				0x0e,
				0x7f, 0x00, 0x00, 0x01,
				0x00, 0x01, 0x00,
				0x00, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
				0x00, 0x1e, 0x00, 0x02, 0x11, 0x11,
			},
		}, {
			"VendorSpecific",
			ie.NewVendorSpecificIE(0xffff, 10415, []byte{0xde, 0xad, 0xbe, 0xef}),
			[]byte{0xff, 0xff, 0x00, 0x06, 0x28, 0xaf, 0xde, 0xad, 0xbe, 0xef},
		},
	}

	for _, c := range cases {
		t.Run("marshal/"+c.description, func(t *testing.T) {
			got, err := c.structured.Marshal()
			if err != nil {
				t.Fatal(err)
			}

			if diff := cmp.Diff(got, c.serialized); diff != "" {
				t.Error(diff)
			}
		})

		t.Run("unmarshal/"+c.description, func(t *testing.T) {
			got, err := ie.Parse(c.serialized)
			if err != nil {
				t.Fatal(err)
			}

			opt := cmp.AllowUnexported(*got, *c.structured)
			if diff := cmp.Diff(got, c.structured, opt); diff != "" {
				t.Error(diff)
			}
		})
	}
}

func TestIEAddRemove(t *testing.T) {
	i := ie.NewCreatePDR(
		ie.NewNodeID("127.0.0.1", "", ""),
		ie.NewPDRID(1),
	)
	i.Add(ie.NewAPNDNN("foo.example"))

	added := ie.NewCreatePDR(
		ie.NewNodeID("127.0.0.1", "", ""),
		ie.NewPDRID(1),
		ie.NewAPNDNN("foo.example"),
	)

	opt := cmp.AllowUnexported(*i, *added)
	if diff := cmp.Diff(i, added, opt); diff != "" {
		t.Error(diff)
	}

	i.Remove(ie.NodeID)

	removed := ie.NewCreatePDR(
		ie.NewPDRID(1),
		ie.NewAPNDNN("foo.example"),
	)

	opt = cmp.AllowUnexported(*i, *removed)
	if diff := cmp.Diff(i, removed, opt); diff != "" {
		t.Error(diff)
	}
}

func TestMalformedIEs(t *testing.T) {
	serialized := []byte{0x00, 0x00, 0x00, 0x02, 0x00}
	got, err := ie.Parse(serialized)
	if err != io.ErrUnexpectedEOF {
		t.Fatal("Expected EOF error when parsing too short IE, but got", err, got)
	}
}
