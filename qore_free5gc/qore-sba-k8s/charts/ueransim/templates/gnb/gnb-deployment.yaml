
{{- with .Values.gnb }}
{{- if and .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ueransim.fullname" $ }}-{{ .name }}
  labels:
    {{- include "ueransim.labels" $ | nindent 4 }}
    app: {{ $.Values.projectName }}
    component: {{ .name }}
spec:
  selector:
    matchLabels:
      {{- include "ueransim.selectorLabels" $ | nindent 6 }}
      app: {{ $.Values.projectName }}
      component: {{ .name }}
  replicas: {{ .replicaCount }}
  template:
    metadata:
      labels:
        {{- include "ueransim.selectorLabels" $ | nindent 8 }}
        app: {{ $.Values.projectName }}
        component: {{ .name }}
      annotations:
        {{- include "ueransim.gnbAnnotations" $ | nindent 8 }}
        {{- if or $.Values.global.n2network.enabled $.Values.global.n3network.enabled}}
        k8s.v1.cni.cncf.io/networks: '[
        {{- if $.Values.global.n2network.enabled }}
            { "name": "{{ $.Values.global.n2network.name }}-{{ include "ueransim.fullname" $ }}",
              "interface": "n2",
              "ips": [ "{{ .n2if.ipAddress }}/{{ $.Values.global.n2network.cidr }}" ],
              "gateway": [ "{{ $.Values.global.n2network.gatewayIP }}" ]
            },
        {{- end }}
            { "name": "n3network-oai-traffic-server",
                    "interface": "n3",
                    "ips": [ "10.100.50.236/29" ],
                    "gateway": [ "10.100.50.235" ]
                  }
            ]'
        {{- end }}
    spec:
      imagePullSecrets:
        {{- toYaml $.Values.global.imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-amf
        {{- with $.Values.initcontainers.sctp_test }}
        image: {{ .image }}:{{ .tag }}
        {{- end }}
        command: ["sh", "-c", "until sctp_test -s -H 0.0.0.0 -P 25000 -h {{ .amf.n2if.ipAddress }} -p {{ .amf.n2if.port }}; do echo waiting for the AMF; sleep 2; done;"]
      containers:
      - image: {{ $ .Values.global
        name: {{ .name }}
        ports:
        - name: gnb-ue
          containerPort: {{ .service.port }}
          protocol: {{ .service.protocol }}
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        command: ["./nr-gnb"]
        args: ["-c", "{{ .volume.mount }}/gnb-config.yaml"]
        volumeMounts:
        - mountPath: {{ .volume.mount }}
          name: {{ .volume.name }}
        resources:
            {{- toYaml .resources | nindent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}

      volumes:
      - name: {{ .volume.name }}
        configMap:
          name: {{ .configmap.name }}
{{- end }}
{{- end }}
