From 0f7f3f2e410dbdedefcf266c52fb7c6384e2994d Mon Sep 17 00:00:00 2001
From: Lakshya Chopra <lakshyachopra2707@gmail.com>
Date: Wed, 13 Nov 2024 18:02:27 +0000
Subject: [PATCH] ADD: PQ-mTLS

---
 .netrc                                  |  2 +-
 Application_entity/server/sbi/server.go | 13 +++++++++--
 Dockerfile                              | 31 +++++++++++++++++++++++--
 go.mod                                  |  1 +
 go.sum                                  |  2 ++
 5 files changed, 44 insertions(+), 5 deletions(-)

diff --git a/.netrc b/.netrc
index be78029..e0cb5aa 100644
--- a/.netrc
+++ b/.netrc
@@ -1,3 +1,3 @@
 # .netrc
 ## generate token with https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
-machine github.com login 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
\ No newline at end of file
+machine github.com login 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
\ No newline at end of file
diff --git a/Application_entity/server/sbi/server.go b/Application_entity/server/sbi/server.go
index 33935b2..003f1db 100644
--- a/Application_entity/server/sbi/server.go
+++ b/Application_entity/server/sbi/server.go
@@ -2,6 +2,7 @@ package sbi
 
 import (
 	"context"
+	"crypto/tls"
 	"fmt"
 	"log"
 	"net/http"
@@ -13,7 +14,6 @@ import (
 	"github.com/sirupsen/logrus"
 
 	"github.com/coranlabs/CORAN_LIB_OPENAPI/models"
-	"github.com/coranlabs/CORAN_LIB_UTIL/httpwrapper"
 	logger_util "github.com/coranlabs/CORAN_LIB_UTIL/logger"
 	"github.com/coranlabs/CORAN_PCF/Application_entity/logger"
 	"github.com/coranlabs/CORAN_PCF/Application_entity/pkg/app"
@@ -21,6 +21,7 @@ import (
 	"github.com/coranlabs/CORAN_PCF/Application_entity/server/sbi/consumer"
 	"github.com/coranlabs/CORAN_PCF/Application_entity/server/sbi/processor"
 	"github.com/coranlabs/CORAN_PCF/Application_entity/util"
+	"github.com/lakshya-chopra/httpwrapper"
 )
 
 type Route struct {
@@ -113,8 +114,16 @@ func NewServer(pcf pcf, tlsKeyLogPath string) (*Server, error) {
 	cfg := s.Config()
 	bindAddr := cfg.GetSbiBindingAddr()
 	logger.SBILog.Infof("Binding addr: [%s]", bindAddr)
+
+
+	server_cert, err1 := tls.LoadX509KeyPair(cfg.GetCertPemPath(), cfg.GetCertKeyPath())
+
+	if err1 != nil {
+		log.Fatal(err1)
+	}
+	
 	var err error
-	if s.httpServer, err = httpwrapper.NewHttp2Server(bindAddr, tlsKeyLogPath, s.router); err != nil {
+	if s.httpServer, err = httpwrapper.NewHttp2Server(bindAddr, tlsKeyLogPath, s.router,server_cert); err != nil {
 		logger.InitLog.Errorf("Initialize HTTP server failed: %v", err)
 		return nil, err
 	}
diff --git a/Dockerfile b/Dockerfile
index a88d04f..d3133cf 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,11 +1,38 @@
 # Stage 1
-FROM golang:1.23.0-alpine AS builder
+FROM golang:1.23.0-bullseye AS builder
 WORKDIR /pcf
 COPY .netrc /root/.netrc
 COPY . /pcf
-RUN apk add --no-cache git
+RUN apt install git
 RUN go env -w GOPRIVATE=github.com/coranlabs
 RUN go mod download
+
+# RUN git clone https://github.com/lakshya-chopra/go /cloudflare-go
+# WORKDIR /cloudflare-go/src
+# RUN ./make.bash
+
+# ENV GOROOT /cloudflare-go 
+# ENV PATH $GOROOT/bin:$GOPATH/bin:$PATH
+# ENV go /cloudflare-go/bin/go
+
+
+RUN mkdir -p /go-1.23
+RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \
+    && tar -C /go-1.23 -xzf go1.23.0.linux-amd64.tar.gz
+ENV GOROOT_BOOTSTRAP=/go-1.23/go
+
+
+RUN git clone https://github.com/lakshya-chopra/go /cloudflare-go
+RUN rm -rf /usr/local/go/src/crypto
+RUN rm -rf /usr/local/go/src/vendor
+RUN cp /cloudflare-go/src/crypto -R /usr/local/go/src/crypto
+RUN cp /cloudflare-go/src/vendor -R /usr/local/go/src/vendor
+WORKDIR /usr/local/go/src/
+
+RUN ./make.bash
+
+WORKDIR /pcf
+
 RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o pcf ./main.go
 
 # Stage 2
diff --git a/go.mod b/go.mod
index 65e0f97..9b7b691 100644
--- a/go.mod
+++ b/go.mod
@@ -42,6 +42,7 @@ require (
 	github.com/json-iterator/go v1.1.12 // indirect
 	github.com/klauspost/compress v1.17.2 // indirect
 	github.com/klauspost/cpuid/v2 v2.2.7 // indirect
+	github.com/lakshya-chopra/httpwrapper v0.0.1 // indirect
 	github.com/leodido/go-urn v1.4.0 // indirect
 	github.com/magiconair/properties v1.8.7 // indirect
 	github.com/mattn/go-isatty v0.0.20 // indirect
diff --git a/go.sum b/go.sum
index 0c4ea68..98dae59 100644
--- a/go.sum
+++ b/go.sum
@@ -73,6 +73,8 @@ github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
 github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
 github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
 github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=
+github.com/lakshya-chopra/httpwrapper v0.0.1 h1:bnb2eYQBsYMX/gUr8uhSNxbjVfK/04EEozx9uA/gnqk=
+github.com/lakshya-chopra/httpwrapper v0.0.1/go.mod h1:zrgSmzr/IuUxKZAzaBELxyf3PgjhNn4gu8ppVbLr4OY=
 github.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=
 github.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=
 github.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=
-- 
2.43.0

