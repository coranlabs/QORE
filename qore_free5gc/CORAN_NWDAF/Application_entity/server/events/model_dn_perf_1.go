/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// DnPerf1 - Represents DN performance for the application.
type DnPerf1 struct {
	AppServerInsAddr AddrFqdn `json:"appServerInsAddr,omitempty"`

	// Identifies the UPF.
	UpfId string `json:"upfId,omitempty"`

	// DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
	Dnai string `json:"dnai,omitempty"`

	PerfData PerfData1 `json:"perfData,omitempty"`

	SpatialValidCon NetworkAreaInfo `json:"spatialValidCon,omitempty"`

	TemporalValidCon TimeWindow `json:"temporalValidCon,omitempty"`
}

// AssertDnPerf1Required checks if the required fields are not zero-ed
func AssertDnPerf1Required(obj DnPerf1) error {
	if err := AssertAddrFqdnRequired(obj.AppServerInsAddr); err != nil {
		return err
	}
	if err := AssertPerfData1Required(obj.PerfData); err != nil {
		return err
	}
	if err := AssertNetworkAreaInfoRequired(obj.SpatialValidCon); err != nil {
		return err
	}
	if err := AssertTimeWindowRequired(obj.TemporalValidCon); err != nil {
		return err
	}
	return nil
}

// AssertRecurseDnPerf1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DnPerf1 (e.g. [][]DnPerf1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDnPerf1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDnPerf1, ok := obj.(DnPerf1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDnPerf1Required(aDnPerf1)
	})
}
