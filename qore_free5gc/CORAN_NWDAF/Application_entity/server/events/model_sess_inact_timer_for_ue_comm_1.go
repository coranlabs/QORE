/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// SessInactTimerForUeComm1 - Represents the N4 Session inactivity timer.
type SessInactTimerForUeComm1 struct {

	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
	N4SessId int32 `json:"N4SessId,omitempty"`

	// indicating a time in seconds.
	SessInactiveTimer int32 `json:"sessInactiveTimer,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Confidence int32 `json:"confidence,omitempty"`
}

// AssertSessInactTimerForUeComm1Required checks if the required fields are not zero-ed
func AssertSessInactTimerForUeComm1Required(obj SessInactTimerForUeComm1) error {
	return nil
}

// AssertRecurseSessInactTimerForUeComm1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SessInactTimerForUeComm1 (e.g. [][]SessInactTimerForUeComm1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSessInactTimerForUeComm1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSessInactTimerForUeComm1, ok := obj.(SessInactTimerForUeComm1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSessInactTimerForUeComm1Required(aSessInactTimerForUeComm1)
	})
}
