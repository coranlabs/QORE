/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// NfStatus1 - Contains the percentage of time spent on various NF states.
type NfStatus1 struct {

	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	StatusRegistered int32 `json:"statusRegistered,omitempty"`

	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	StatusUnregistered int32 `json:"statusUnregistered,omitempty"`

	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.
	StatusUndiscoverable int32 `json:"statusUndiscoverable,omitempty"`
}

// AssertNfStatus1Required checks if the required fields are not zero-ed
func AssertNfStatus1Required(obj NfStatus1) error {
	return nil
}

// AssertRecurseNfStatus1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NfStatus1 (e.g. [][]NfStatus1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNfStatus1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNfStatus1, ok := obj.(NfStatus1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNfStatus1Required(aNfStatus1)
	})
}
