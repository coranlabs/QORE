/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

type LocationArea struct {

	// Identifies a list of geographic area of the user where the UE is located.
	GeographicAreas []GeographicArea `json:"geographicAreas,omitempty"`

	// Identifies a list of civic addresses of the user where the UE is located.
	CivicAddresses []CivicAddress `json:"civicAddresses,omitempty"`

	NwAreaInfo NetworkAreaInfo1 `json:"nwAreaInfo,omitempty"`

	UmtTime UmtTime `json:"umtTime,omitempty"`
}

// AssertLocationAreaRequired checks if the required fields are not zero-ed
func AssertLocationAreaRequired(obj LocationArea) error {
	for _, el := range obj.GeographicAreas {
		if err := AssertGeographicAreaRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.CivicAddresses {
		if err := AssertCivicAddressRequired(el); err != nil {
			return err
		}
	}
	if err := AssertNetworkAreaInfo1Required(obj.NwAreaInfo); err != nil {
		return err
	}
	if err := AssertUmtTimeRequired(obj.UmtTime); err != nil {
		return err
	}
	return nil
}

// AssertRecurseLocationAreaRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LocationArea (e.g. [][]LocationArea), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseLocationAreaRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLocationArea, ok := obj.(LocationArea)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertLocationAreaRequired(aLocationArea)
	})
}
