/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// WlanPerformanceInfo1 - The WLAN performance related information.
type WlanPerformanceInfo1 struct {
	NetworkArea NetworkAreaInfo `json:"networkArea,omitempty"`

	WlanPerSsidInfos []WlanPerSsIdPerformanceInfo `json:"wlanPerSsidInfos"`
}

// AssertWlanPerformanceInfo1Required checks if the required fields are not zero-ed
func AssertWlanPerformanceInfo1Required(obj WlanPerformanceInfo1) error {
	elements := map[string]interface{}{
		"wlanPerSsidInfos": obj.WlanPerSsidInfos,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNetworkAreaInfoRequired(obj.NetworkArea); err != nil {
		return err
	}
	for _, el := range obj.WlanPerSsidInfos {
		if err := AssertWlanPerSsIdPerformanceInfoRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseWlanPerformanceInfo1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of WlanPerformanceInfo1 (e.g. [][]WlanPerformanceInfo1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseWlanPerformanceInfo1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aWlanPerformanceInfo1, ok := obj.(WlanPerformanceInfo1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertWlanPerformanceInfo1Required(aWlanPerformanceInfo1)
	})
}
