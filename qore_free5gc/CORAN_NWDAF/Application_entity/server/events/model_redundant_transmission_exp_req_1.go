/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// RedundantTransmissionExpReq1 - Represents other redundant transmission experience analytics requirements.
type RedundantTransmissionExpReq1 struct {
	RedTOrderCriter RedTransExpOrderingCriterion `json:"redTOrderCriter,omitempty"`

	Order MatchingDirection `json:"order,omitempty"`
}

// AssertRedundantTransmissionExpReq1Required checks if the required fields are not zero-ed
func AssertRedundantTransmissionExpReq1Required(obj RedundantTransmissionExpReq1) error {
	if err := AssertRedTransExpOrderingCriterionRequired(obj.RedTOrderCriter); err != nil {
		return err
	}
	if err := AssertMatchingDirectionRequired(obj.Order); err != nil {
		return err
	}
	return nil
}

// AssertRecurseRedundantTransmissionExpReq1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RedundantTransmissionExpReq1 (e.g. [][]RedundantTransmissionExpReq1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRedundantTransmissionExpReq1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRedundantTransmissionExpReq1, ok := obj.(RedundantTransmissionExpReq1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRedundantTransmissionExpReq1Required(aRedundantTransmissionExpReq1)
	})
}
