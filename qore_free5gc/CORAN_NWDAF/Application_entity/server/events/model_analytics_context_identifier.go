/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// AnalyticsContextIdentifier - Contains information about available analytics contexts.
type AnalyticsContextIdentifier struct {

	// The identifier of a subscription.
	SubscriptionId string `json:"subscriptionId,omitempty"`

	// List of analytics types for which NF related analytics contexts can be retrieved.
	NfAnaCtxts []NwdafEvent `json:"nfAnaCtxts,omitempty"`

	// List of objects that indicate for which SUPI and analytics types combinations analytics context can be retrieved.
	UeAnaCtxts []UeAnalyticsContextDescriptor `json:"ueAnaCtxts,omitempty"`
}

// AssertAnalyticsContextIdentifierRequired checks if the required fields are not zero-ed
func AssertAnalyticsContextIdentifierRequired(obj AnalyticsContextIdentifier) error {
	for _, el := range obj.NfAnaCtxts {
		if err := AssertNwdafEventRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UeAnaCtxts {
		if err := AssertUeAnalyticsContextDescriptorRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseAnalyticsContextIdentifierRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AnalyticsContextIdentifier (e.g. [][]AnalyticsContextIdentifier), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAnalyticsContextIdentifierRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAnalyticsContextIdentifier, ok := obj.(AnalyticsContextIdentifier)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAnalyticsContextIdentifierRequired(aAnalyticsContextIdentifier)
	})
}
