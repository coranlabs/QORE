/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package events

// RedirectResponse - The response shall include a Location header field containing a different URI (pointing to a different URI of an other service instance), or the same URI if a request is redirected to the same target resource via a different SCP.
type RedirectResponse struct {
	Cause string `json:"cause,omitempty"`

	// String providing an URI formatted according to RFC 3986
	TargetScp string `json:"targetScp,omitempty"`

	// String providing an URI formatted according to RFC 3986
	TargetSepp string `json:"targetSepp,omitempty"`
}

// AssertRedirectResponseRequired checks if the required fields are not zero-ed
func AssertRedirectResponseRequired(obj RedirectResponse) error {
	return nil
}

// AssertRecurseRedirectResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RedirectResponse (e.g. [][]RedirectResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRedirectResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRedirectResponse, ok := obj.(RedirectResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRedirectResponseRequired(aRedirectResponse)
	})
}
