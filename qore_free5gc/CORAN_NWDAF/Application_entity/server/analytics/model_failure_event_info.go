/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package analytics

// FailureEventInfo - Contains information on the event for which the subscription is not successful.
type FailureEventInfo struct {
	Event NwdafEvent `json:"event"`

	FailureCode NwdafFailureCode `json:"failureCode"`
}

// AssertFailureEventInfoRequired checks if the required fields are not zero-ed
func AssertFailureEventInfoRequired(obj FailureEventInfo) error {
	elements := map[string]interface{}{
		"event":       obj.Event,
		"failureCode": obj.FailureCode,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNwdafEventRequired(obj.Event); err != nil {
		return err
	}
	if err := AssertNwdafFailureCodeRequired(obj.FailureCode); err != nil {
		return err
	}
	return nil
}

// AssertRecurseFailureEventInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of FailureEventInfo (e.g. [][]FailureEventInfo), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseFailureEventInfoRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aFailureEventInfo, ok := obj.(FailureEventInfo)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertFailureEventInfoRequired(aFailureEventInfo)
	})
}
