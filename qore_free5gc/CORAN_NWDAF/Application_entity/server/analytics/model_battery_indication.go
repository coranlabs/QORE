/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package analytics

// BatteryIndication - Parameters \"replaceableInd\" and \"rechargeableInd\" are only included if the value of Parameter \"batteryInd\" is true.
type BatteryIndication struct {

	// This IE shall indicate whether the UE is battery powered or not. true: the UE is battery powered; false or absent: the UE is not battery powered
	BatteryInd bool `json:"batteryInd,omitempty"`

	// This IE shall indicate whether the battery of the UE is replaceable or not. true: the battery of the UE is replaceable; false or absent: the battery of the UE is not replaceable.
	ReplaceableInd bool `json:"replaceableInd,omitempty"`

	// This IE shall indicate whether the battery of the UE is rechargeable or not. true: the battery of UE is rechargeable; false or absent: the battery of the UE is not rechargeable.
	RechargeableInd bool `json:"rechargeableInd,omitempty"`
}

// AssertBatteryIndicationRequired checks if the required fields are not zero-ed
func AssertBatteryIndicationRequired(obj BatteryIndication) error {
	return nil
}

// AssertRecurseBatteryIndicationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of BatteryIndication (e.g. [][]BatteryIndication), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseBatteryIndicationRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aBatteryIndication, ok := obj.(BatteryIndication)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertBatteryIndicationRequired(aBatteryIndication)
	})
}
