/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package analytics

// SmcceUeList - Represents the List of UEs classified based on experience level of Session Management congestion control.
type SmcceUeList struct {
	HighLevel []string `json:"highLevel,omitempty"`

	MediumLevel []string `json:"mediumLevel,omitempty"`

	LowLevel []string `json:"lowLevel,omitempty"`
}

// AssertSmcceUeListRequired checks if the required fields are not zero-ed
func AssertSmcceUeListRequired(obj SmcceUeList) error {
	return nil
}

// AssertRecurseSmcceUeListRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SmcceUeList (e.g. [][]SmcceUeList), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSmcceUeListRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSmcceUeList, ok := obj.(SmcceUeList)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSmcceUeListRequired(aSmcceUeList)
	})
}
