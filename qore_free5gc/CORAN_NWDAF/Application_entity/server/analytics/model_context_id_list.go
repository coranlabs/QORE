/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.2.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package analytics

// ContextIdList - Contains a list of context identifiers of context information of analytics subscriptions.
type ContextIdList struct {
	ContextIds []AnalyticsContextIdentifier `json:"contextIds"`
}

// AssertContextIdListRequired checks if the required fields are not zero-ed
func AssertContextIdListRequired(obj ContextIdList) error {
	elements := map[string]interface{}{
		"contextIds": obj.ContextIds,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.ContextIds {
		if err := AssertAnalyticsContextIdentifierRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseContextIdListRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ContextIdList (e.g. [][]ContextIdList), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseContextIdListRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aContextIdList, ok := obj.(ContextIdList)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertContextIdListRequired(aContextIdList)
	})
}
