/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.0.0-alpha.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nbiml

// DispersionClass - Possible values are   - FIXED: Dispersion class as fixed UE its data or transaction usage at a location or a slice, is higher than its class threshold set for its all data or transaction usage.   - CAMPER: Dispersion class as camper UE, its data or transaction usage at a location or a slice, is higher than its class threshold and lower than the fixed class threshold set for its all data or transaction usage..   - TRAVELLER: Dispersion class as traveller UE, its data or transaction usage at a location or a slice, is lower than the camper class threshold set for its all data or transaction usage.   - TOP_HEAVY: Dispersion class as Top_Heavy UE, who's dispersion percentile rating at a location or a slice, is higher than its class threshold.
type DispersionClass struct {
}

// AssertDispersionClassRequired checks if the required fields are not zero-ed
func AssertDispersionClassRequired(obj DispersionClass) error {
	return nil
}

// AssertRecurseDispersionClassRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DispersionClass (e.g. [][]DispersionClass), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDispersionClassRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDispersionClass, ok := obj.(DispersionClass)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDispersionClassRequired(aDispersionClass)
	})
}
