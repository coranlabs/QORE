/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.0.0-alpha.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nbiml

// NwdafMlModelProvNotif - Represents notifications on events that occurred.
type NwdafMlModelProvNotif struct {

	// Notifications about Individual Events.
	EventNotifs []MlEventNotif `json:"eventNotifs"`

	// String identifying a subscription to the Nnwdaf_MLModelProvision Service.
	SubscriptionId string `json:"subscriptionId"`
}

// AssertNwdafMlModelProvNotifRequired checks if the required fields are not zero-ed
func AssertNwdafMlModelProvNotifRequired(obj NwdafMlModelProvNotif) error {
	elements := map[string]interface{}{
		"eventNotifs":    obj.EventNotifs,
		"subscriptionId": obj.SubscriptionId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.EventNotifs {
		if err := AssertMlEventNotifRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseNwdafMlModelProvNotifRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NwdafMlModelProvNotif (e.g. [][]NwdafMlModelProvNotif), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNwdafMlModelProvNotifRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNwdafMlModelProvNotif, ok := obj.(NwdafMlModelProvNotif)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNwdafMlModelProvNotifRequired(aNwdafMlModelProvNotif)
	})
}
