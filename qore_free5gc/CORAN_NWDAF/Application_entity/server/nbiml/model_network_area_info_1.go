/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 1.0.0-alpha.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package nbiml

// NetworkAreaInfo1 - Describes a network area information in which the NF service consumer requests the number of UEs.
type NetworkAreaInfo1 struct {

	// Contains a list of E-UTRA cell identities.
	Ecgis []Ecgi `json:"ecgis,omitempty"`

	// Contains a list of NR cell identities.
	Ncgis []Ncgi `json:"ncgis,omitempty"`

	// Contains a list of NG RAN nodes.
	GRanNodeIds []GlobalRanNodeId `json:"gRanNodeIds,omitempty"`

	// Contains a list of tracking area identities.
	Tais []Tai `json:"tais,omitempty"`
}

// AssertNetworkAreaInfo1Required checks if the required fields are not zero-ed
func AssertNetworkAreaInfo1Required(obj NetworkAreaInfo1) error {
	for _, el := range obj.Ecgis {
		if err := AssertEcgiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Ncgis {
		if err := AssertNcgiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.GRanNodeIds {
		if err := AssertGlobalRanNodeIdRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Tais {
		if err := AssertTaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseNetworkAreaInfo1Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NetworkAreaInfo1 (e.g. [][]NetworkAreaInfo1), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNetworkAreaInfo1Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNetworkAreaInfo1, ok := obj.(NetworkAreaInfo1)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNetworkAreaInfo1Required(aNetworkAreaInfo1)
	})
}
